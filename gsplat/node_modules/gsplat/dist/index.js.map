{"version":3,"file":"index.js","sources":["../src/math/Vector3.ts","../src/math/Quaternion.ts","../src/events/EventDispatcher.ts","../src/math/Matrix4.ts","../src/events/Events.ts","../src/core/Object3D.ts","../src/math/Matrix3.ts","../src/splats/SplatData.ts","../src/splats/SplatvData.ts","../src/utils/Converter.ts","../src/math/Box3.ts","../src/splats/Splat.ts","../src/splats/Splatv.ts","../src/cameras/CameraData.ts","../src/math/Vector4.ts","../src/cameras/Camera.ts","../src/core/Scene.ts","../src/utils/LoaderUtils.ts","../src/loaders/Loader.ts","../src/loaders/PLYLoader.ts","../src/loaders/SplatvLoader.ts","../src/renderers/webgl/programs/ShaderProgram.ts","../src/wasm/data.js","../src/renderers/webgl/utils/RenderData.ts","../src/math/Color32.ts","../src/renderers/webgl/programs/RenderProgram.ts","../src/renderers/webgl/passes/FadeInPass.ts","../src/renderers/WebGLRenderer.ts","../src/controls/OrbitControls.ts","../src/controls/FPSControls.ts","../src/math/Plane.ts","../src/renderers/webgl/passes/ShaderPass.ts","../src/renderers/webgl/programs/VideoRenderProgram.ts","../src/math/BVH.ts","../src/renderers/webgl/utils/IntersectionTester.ts"],"sourcesContent":["import { Matrix4 } from \"./Matrix4\";\n\nclass Vector3 {\n    public readonly x: number;\n    public readonly y: number;\n    public readonly z: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    equals(v: Vector3): boolean {\n        if (this.x !== v.x) {\n            return false;\n        }\n        if (this.y !== v.y) {\n            return false;\n        }\n        if (this.z !== v.z) {\n            return false;\n        }\n\n        return true;\n    }\n\n    add(v: number): Vector3;\n    add(v: Vector3): Vector3;\n    add(v: number | Vector3): Vector3 {\n        if (typeof v === \"number\") {\n            return new Vector3(this.x + v, this.y + v, this.z + v);\n        } else {\n            return new Vector3(this.x + v.x, this.y + v.y, this.z + v.z);\n        }\n    }\n\n    subtract(v: number): Vector3;\n    subtract(v: Vector3): Vector3;\n    subtract(v: number | Vector3): Vector3 {\n        if (typeof v === \"number\") {\n            return new Vector3(this.x - v, this.y - v, this.z - v);\n        } else {\n            return new Vector3(this.x - v.x, this.y - v.y, this.z - v.z);\n        }\n    }\n\n    multiply(v: number): Vector3;\n    multiply(v: Vector3): Vector3;\n    multiply(v: Matrix4): Vector3;\n    multiply(v: number | Vector3 | Matrix4): Vector3 {\n        if (typeof v === \"number\") {\n            return new Vector3(this.x * v, this.y * v, this.z * v);\n        } else if (v instanceof Vector3) {\n            return new Vector3(this.x * v.x, this.y * v.y, this.z * v.z);\n        } else {\n            return new Vector3(\n                this.x * v.buffer[0] + this.y * v.buffer[4] + this.z * v.buffer[8] + v.buffer[12],\n                this.x * v.buffer[1] + this.y * v.buffer[5] + this.z * v.buffer[9] + v.buffer[13],\n                this.x * v.buffer[2] + this.y * v.buffer[6] + this.z * v.buffer[10] + v.buffer[14],\n            );\n        }\n    }\n\n    divide(v: number): Vector3;\n    divide(v: Vector3): Vector3;\n    divide(v: number | Vector3): Vector3 {\n        if (typeof v === \"number\") {\n            return new Vector3(this.x / v, this.y / v, this.z / v);\n        } else {\n            return new Vector3(this.x / v.x, this.y / v.y, this.z / v.z);\n        }\n    }\n\n    cross(v: Vector3): Vector3 {\n        const x = this.y * v.z - this.z * v.y;\n        const y = this.z * v.x - this.x * v.z;\n        const z = this.x * v.y - this.y * v.x;\n\n        return new Vector3(x, y, z);\n    }\n\n    dot(v: Vector3): number {\n        return this.x * v.x + this.y * v.y + this.z * v.z;\n    }\n\n    lerp(v: Vector3, t: number): Vector3 {\n        return new Vector3(this.x + (v.x - this.x) * t, this.y + (v.y - this.y) * t, this.z + (v.z - this.z) * t);\n    }\n\n    min(v: Vector3): Vector3 {\n        return new Vector3(Math.min(this.x, v.x), Math.min(this.y, v.y), Math.min(this.z, v.z));\n    }\n\n    max(v: Vector3): Vector3 {\n        return new Vector3(Math.max(this.x, v.x), Math.max(this.y, v.y), Math.max(this.z, v.z));\n    }\n\n    getComponent(axis: number) {\n        switch (axis) {\n            case 0:\n                return this.x;\n            case 1:\n                return this.y;\n            case 2:\n                return this.z;\n            default:\n                throw new Error(`Invalid component index: ${axis}`);\n        }\n    }\n\n    minComponent(): number {\n        if (this.x < this.y && this.x < this.z) {\n            return 0;\n        } else if (this.y < this.z) {\n            return 1;\n        } else {\n            return 2;\n        }\n    }\n\n    maxComponent(): number {\n        if (this.x > this.y && this.x > this.z) {\n            return 0;\n        } else if (this.y > this.z) {\n            return 1;\n        } else {\n            return 2;\n        }\n    }\n\n    magnitude(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n    distanceTo(v: Vector3): number {\n        return Math.sqrt((this.x - v.x) ** 2 + (this.y - v.y) ** 2 + (this.z - v.z) ** 2);\n    }\n\n    normalize(): Vector3 {\n        const length = this.magnitude();\n\n        return new Vector3(this.x / length, this.y / length, this.z / length);\n    }\n\n    flat(): number[] {\n        return [this.x, this.y, this.z];\n    }\n\n    clone(): Vector3 {\n        return new Vector3(this.x, this.y, this.z);\n    }\n\n    toString(): string {\n        return `[${this.flat().join(\", \")}]`;\n    }\n\n    static One(value: number = 1): Vector3 {\n        return new Vector3(value, value, value);\n    }\n}\n\nexport { Vector3 };\n","import { Matrix3 } from \"./Matrix3\";\nimport { Vector3 } from \"./Vector3\";\n\nclass Quaternion {\n    public readonly x: number;\n    public readonly y: number;\n    public readonly z: number;\n    public readonly w: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 1) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n\n    equals(q: Quaternion): boolean {\n        if (this.x !== q.x) {\n            return false;\n        }\n        if (this.y !== q.y) {\n            return false;\n        }\n        if (this.z !== q.z) {\n            return false;\n        }\n        if (this.w !== q.w) {\n            return false;\n        }\n\n        return true;\n    }\n\n    normalize(): Quaternion {\n        const l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n        return new Quaternion(this.x / l, this.y / l, this.z / l, this.w / l);\n    }\n\n    multiply(q: Quaternion): Quaternion {\n        const w1 = this.w,\n            x1 = this.x,\n            y1 = this.y,\n            z1 = this.z;\n        const w2 = q.w,\n            x2 = q.x,\n            y2 = q.y,\n            z2 = q.z;\n\n        return new Quaternion(\n            w1 * x2 + x1 * w2 + y1 * z2 - z1 * y2,\n            w1 * y2 - x1 * z2 + y1 * w2 + z1 * x2,\n            w1 * z2 + x1 * y2 - y1 * x2 + z1 * w2,\n            w1 * w2 - x1 * x2 - y1 * y2 - z1 * z2,\n        );\n    }\n\n    inverse(): Quaternion {\n        const l = this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n        return new Quaternion(-this.x / l, -this.y / l, -this.z / l, this.w / l);\n    }\n\n    apply(v: Vector3): Vector3 {\n        const vecQuat = new Quaternion(v.x, v.y, v.z, 0);\n        const conjugate = new Quaternion(-this.x, -this.y, -this.z, this.w);\n        const rotatedQuat = this.multiply(vecQuat).multiply(conjugate);\n        return new Vector3(rotatedQuat.x, rotatedQuat.y, rotatedQuat.z);\n    }\n\n    flat(): number[] {\n        return [this.x, this.y, this.z, this.w];\n    }\n\n    clone(): Quaternion {\n        return new Quaternion(this.x, this.y, this.z, this.w);\n    }\n\n    static FromEuler(e: Vector3): Quaternion {\n        const halfX = e.x / 2;\n        const halfY = e.y / 2;\n        const halfZ = e.z / 2;\n        const cy = Math.cos(halfY);\n        const sy = Math.sin(halfY);\n        const cp = Math.cos(halfX);\n        const sp = Math.sin(halfX);\n        const cz = Math.cos(halfZ);\n        const sz = Math.sin(halfZ);\n\n        const q = new Quaternion(\n            cy * sp * cz + sy * cp * sz,\n            sy * cp * cz - cy * sp * sz,\n            cy * cp * sz - sy * sp * cz,\n            cy * cp * cz + sy * sp * sz,\n        );\n        return q;\n    }\n\n    toEuler(): Vector3 {\n        const sinr_cosp = 2 * (this.w * this.x + this.y * this.z);\n        const cosr_cosp = 1 - 2 * (this.x * this.x + this.y * this.y);\n        const x = Math.atan2(sinr_cosp, cosr_cosp);\n\n        let y;\n        const sinp = 2 * (this.w * this.y - this.z * this.x);\n        if (Math.abs(sinp) >= 1) {\n            y = (Math.sign(sinp) * Math.PI) / 2;\n        } else {\n            y = Math.asin(sinp);\n        }\n\n        const siny_cosp = 2 * (this.w * this.z + this.x * this.y);\n        const cosy_cosp = 1 - 2 * (this.y * this.y + this.z * this.z);\n        const z = Math.atan2(siny_cosp, cosy_cosp);\n\n        return new Vector3(x, y, z);\n    }\n\n    static FromMatrix3(matrix: Matrix3): Quaternion {\n        const m = matrix.buffer;\n        const trace = m[0] + m[4] + m[8];\n        let x, y, z, w;\n        if (trace > 0) {\n            const s = 0.5 / Math.sqrt(trace + 1.0);\n            w = 0.25 / s;\n            x = (m[7] - m[5]) * s;\n            y = (m[2] - m[6]) * s;\n            z = (m[3] - m[1]) * s;\n        } else if (m[0] > m[4] && m[0] > m[8]) {\n            const s = 2.0 * Math.sqrt(1.0 + m[0] - m[4] - m[8]);\n            w = (m[7] - m[5]) / s;\n            x = 0.25 * s;\n            y = (m[1] + m[3]) / s;\n            z = (m[2] + m[6]) / s;\n        } else if (m[4] > m[8]) {\n            const s = 2.0 * Math.sqrt(1.0 + m[4] - m[0] - m[8]);\n            w = (m[2] - m[6]) / s;\n            x = (m[1] + m[3]) / s;\n            y = 0.25 * s;\n            z = (m[5] + m[7]) / s;\n        } else {\n            const s = 2.0 * Math.sqrt(1.0 + m[8] - m[0] - m[4]);\n            w = (m[3] - m[1]) / s;\n            x = (m[2] + m[6]) / s;\n            y = (m[5] + m[7]) / s;\n            z = 0.25 * s;\n        }\n        return new Quaternion(x, y, z, w);\n    }\n\n    static FromAxisAngle(axis: Vector3, angle: number): Quaternion {\n        const halfAngle = angle / 2;\n        const sin = Math.sin(halfAngle);\n        const cos = Math.cos(halfAngle);\n        return new Quaternion(axis.x * sin, axis.y * sin, axis.z * sin, cos);\n    }\n\n    static LookRotation(direction: Vector3): Quaternion {\n        const forward = new Vector3(0, 0, 1);\n        const dot = forward.dot(direction);\n\n        if (Math.abs(dot - -1.0) < 0.000001) {\n            return new Quaternion(0, 1, 0, Math.PI);\n        }\n        if (Math.abs(dot - 1.0) < 0.000001) {\n            return new Quaternion();\n        }\n\n        const rotAngle = Math.acos(dot);\n        const rotAxis = forward.cross(direction).normalize();\n        return Quaternion.FromAxisAngle(rotAxis, rotAngle);\n    }\n\n    toString(): string {\n        return `[${this.flat().join(\", \")}]`;\n    }\n}\n\nexport { Quaternion };\n","class EventDispatcher {\n    addEventListener: (type: string, listener: (event: Event) => void) => void;\n    removeEventListener: (type: string, listener: (event: Event) => void) => void;\n    hasEventListener: (type: string, listener: (event: Event) => void) => boolean;\n    dispatchEvent: (event: Event) => void;\n\n    constructor() {\n        const listeners = new Map<string, Set<(event: Event) => void>>();\n\n        this.addEventListener = (type: string, listener: (event: Event) => void) => {\n            if (!listeners.has(type)) {\n                listeners.set(type, new Set());\n            }\n\n            listeners.get(type)!.add(listener);\n        };\n\n        this.removeEventListener = (type: string, listener: (event: Event) => void) => {\n            if (!listeners.has(type)) {\n                return;\n            }\n\n            listeners.get(type)!.delete(listener);\n        };\n\n        this.hasEventListener = (type: string, listener: (event: Event) => void) => {\n            if (!listeners.has(type)) {\n                return false;\n            }\n\n            return listeners.get(type)!.has(listener);\n        };\n\n        this.dispatchEvent = (event: Event) => {\n            if (!listeners.has(event.type)) {\n                return;\n            }\n\n            for (const listener of listeners.get(event.type)!) {\n                listener(event);\n            }\n        };\n    }\n}\n\nexport { EventDispatcher };\n","import { Quaternion } from \"./Quaternion\";\nimport { Vector3 } from \"./Vector3\";\n\nclass Matrix4 {\n    public readonly buffer: number[];\n\n    // prettier-ignore\n    constructor(n11: number = 1, n12: number = 0, n13: number = 0, n14: number = 0, \n                n21: number = 0, n22: number = 1, n23: number = 0, n24: number = 0, \n                n31: number = 0, n32: number = 0, n33: number = 1, n34: number = 0, \n                n41: number = 0, n42: number = 0, n43: number = 0, n44: number = 1) {\n        this.buffer = [\n            n11, n12, n13, n14, \n            n21, n22, n23, n24, \n            n31, n32, n33, n34, \n            n41, n42, n43, n44\n        ];\n    }\n\n    equals(m: Matrix4): boolean {\n        if (this.buffer.length !== m.buffer.length) {\n            return false;\n        }\n        if (this.buffer === m.buffer) {\n            return true;\n        }\n        for (let i = 0; i < this.buffer.length; i++) {\n            if (this.buffer[i] !== m.buffer[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    multiply(m: Matrix4): Matrix4 {\n        const a = this.buffer;\n        const b = m.buffer;\n        return new Matrix4(\n            b[0] * a[0] + b[1] * a[4] + b[2] * a[8] + b[3] * a[12],\n            b[0] * a[1] + b[1] * a[5] + b[2] * a[9] + b[3] * a[13],\n            b[0] * a[2] + b[1] * a[6] + b[2] * a[10] + b[3] * a[14],\n            b[0] * a[3] + b[1] * a[7] + b[2] * a[11] + b[3] * a[15],\n            b[4] * a[0] + b[5] * a[4] + b[6] * a[8] + b[7] * a[12],\n            b[4] * a[1] + b[5] * a[5] + b[6] * a[9] + b[7] * a[13],\n            b[4] * a[2] + b[5] * a[6] + b[6] * a[10] + b[7] * a[14],\n            b[4] * a[3] + b[5] * a[7] + b[6] * a[11] + b[7] * a[15],\n            b[8] * a[0] + b[9] * a[4] + b[10] * a[8] + b[11] * a[12],\n            b[8] * a[1] + b[9] * a[5] + b[10] * a[9] + b[11] * a[13],\n            b[8] * a[2] + b[9] * a[6] + b[10] * a[10] + b[11] * a[14],\n            b[8] * a[3] + b[9] * a[7] + b[10] * a[11] + b[11] * a[15],\n            b[12] * a[0] + b[13] * a[4] + b[14] * a[8] + b[15] * a[12],\n            b[12] * a[1] + b[13] * a[5] + b[14] * a[9] + b[15] * a[13],\n            b[12] * a[2] + b[13] * a[6] + b[14] * a[10] + b[15] * a[14],\n            b[12] * a[3] + b[13] * a[7] + b[14] * a[11] + b[15] * a[15],\n        );\n    }\n\n    clone(): Matrix4 {\n        const e = this.buffer;\n        // prettier-ignore\n        return new Matrix4(\n            e[0], e[1], e[2], e[3], \n            e[4], e[5], e[6], e[7], \n            e[8], e[9], e[10], e[11], \n            e[12], e[13], e[14], e[15]\n        );\n    }\n\n    determinant(): number {\n        const e = this.buffer;\n        // prettier-ignore\n        return (\n            e[12] * e[9] * e[6] * e[3] - e[8] * e[13] * e[6] * e[3] - e[12] * e[5] * e[10] * e[3] + e[4] * e[13] * e[10] * e[3] +\n            e[8] * e[5] * e[14] * e[3] - e[4] * e[9] * e[14] * e[3] - e[12] * e[9] * e[2] * e[7] + e[8] * e[13] * e[2] * e[7] +\n            e[12] * e[1] * e[10] * e[7] - e[0] * e[13] * e[10] * e[7] - e[8] * e[1] * e[14] * e[7] + e[0] * e[9] * e[14] * e[7] +\n            e[12] * e[5] * e[2] * e[11] - e[4] * e[13] * e[2] * e[11] - e[12] * e[1] * e[6] * e[11] + e[0] * e[13] * e[6] * e[11] +\n            e[4] * e[1] * e[14] * e[11] - e[0] * e[5] * e[14] * e[11] - e[8] * e[5] * e[2] * e[15] + e[4] * e[9] * e[2] * e[15] +\n            e[8] * e[1] * e[6] * e[15] - e[0] * e[9] * e[6] * e[15] - e[4] * e[1] * e[10] * e[15] + e[0] * e[5] * e[10] * e[15]\n        );\n    }\n\n    invert(): Matrix4 {\n        const e = this.buffer;\n        const det = this.determinant();\n        if (det === 0) {\n            throw new Error(\"Matrix is not invertible.\");\n        }\n        const invDet = 1 / det;\n        // prettier-ignore\n        return new Matrix4(\n            invDet * (\n                e[5] * e[10] * e[15] - e[5] * e[11] * e[14] - e[9] * e[6] * e[15] + e[9] * e[7] * e[14] + e[13] * e[6] * e[11] - e[13] * e[7] * e[10]\n            ),\n            invDet * (\n                -e[1] * e[10] * e[15] + e[1] * e[11] * e[14] + e[9] * e[2] * e[15] - e[9] * e[3] * e[14] - e[13] * e[2] * e[11] + e[13] * e[3] * e[10]\n            ),\n            invDet * (\n                e[1] * e[6] * e[15] - e[1] * e[7] * e[14] - e[5] * e[2] * e[15] + e[5] * e[3] * e[14] + e[13] * e[2] * e[7] - e[13] * e[3] * e[6]\n            ),\n            invDet * (\n                -e[1] * e[6] * e[11] + e[1] * e[7] * e[10] + e[5] * e[2] * e[11] - e[5] * e[3] * e[10] - e[9] * e[2] * e[7] + e[9] * e[3] * e[6]\n            ),\n            invDet * (\n                -e[4] * e[10] * e[15] + e[4] * e[11] * e[14] + e[8] * e[6] * e[15] - e[8] * e[7] * e[14] - e[12] * e[6] * e[11] + e[12] * e[7] * e[10]\n            ),\n            invDet * (\n                e[0] * e[10] * e[15] - e[0] * e[11] * e[14] - e[8] * e[2] * e[15] + e[8] * e[3] * e[14] + e[12] * e[2] * e[11] - e[12] * e[3] * e[10]\n            ),\n            invDet * (\n                -e[0] * e[6] * e[15] + e[0] * e[7] * e[14] + e[4] * e[2] * e[15] - e[4] * e[3] * e[14] - e[12] * e[2] * e[7] + e[12] * e[3] * e[6]\n            ),\n            invDet * (\n                e[0] * e[6] * e[11] - e[0] * e[7] * e[10] - e[4] * e[2] * e[11] + e[4] * e[3] * e[10] + e[8] * e[2] * e[7] - e[8] * e[3] * e[6]\n            ),\n            invDet * (\n                e[4] * e[9] * e[15] - e[4] * e[11] * e[13] - e[8] * e[5] * e[15] + e[8] * e[7] * e[13] + e[12] * e[5] * e[11] - e[12] * e[7] * e[9]\n            ),\n            invDet * (\n                -e[0] * e[9] * e[15] + e[0] * e[11] * e[13] + e[8] * e[1] * e[15] - e[8] * e[3] * e[13] - e[12] * e[1] * e[11] + e[12] * e[3] * e[9]\n            ),\n            invDet * (\n                e[0] * e[5] * e[15] - e[0] * e[7] * e[13] - e[4] * e[1] * e[15] + e[4] * e[3] * e[13] + e[12] * e[1] * e[7] - e[12] * e[3] * e[5]\n            ),\n            invDet * (\n                -e[0] * e[5] * e[11] + e[0] * e[7] * e[9] + e[4] * e[1] * e[11] - e[4] * e[3] * e[9] - e[8] * e[1] * e[7] + e[8] * e[3] * e[5]\n            ),\n            invDet * (\n                -e[4] * e[9] * e[14] + e[4] * e[10] * e[13] + e[8] * e[5] * e[14] - e[8] * e[6] * e[13] - e[12] * e[5] * e[10] + e[12] * e[6] * e[9]\n            ),\n            invDet * (\n                e[0] * e[9] * e[14] - e[0] * e[10] * e[13] - e[8] * e[1] * e[14] + e[8] * e[2] * e[13] + e[12] * e[1] * e[10] - e[12] * e[2] * e[9]\n            ),\n            invDet * (\n                -e[0] * e[5] * e[14] + e[0] * e[6] * e[13] + e[4] * e[1] * e[14] - e[4] * e[2] * e[13] - e[12] * e[1] * e[6] + e[12] * e[2] * e[5]\n            ),\n            invDet * (\n                e[0] * e[5] * e[10] - e[0] * e[6] * e[9] - e[4] * e[1] * e[10] + e[4] * e[2] * e[9] + e[8] * e[1] * e[6] - e[8] * e[2] * e[5]\n            ),\n        );\n    }\n\n    static Compose(position: Vector3, rotation: Quaternion, scale: Vector3): Matrix4 {\n        const x = rotation.x,\n            y = rotation.y,\n            z = rotation.z,\n            w = rotation.w;\n        const x2 = x + x,\n            y2 = y + y,\n            z2 = z + z;\n        const xx = x * x2,\n            xy = x * y2,\n            xz = x * z2;\n        const yy = y * y2,\n            yz = y * z2,\n            zz = z * z2;\n        const wx = w * x2,\n            wy = w * y2,\n            wz = w * z2;\n        const sx = scale.x,\n            sy = scale.y,\n            sz = scale.z;\n        // prettier-ignore\n        return new Matrix4(\n            (1 - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n            (xy - wz) * sy, (1 - (xx + zz)) * sy, (yz + wx) * sy, 0,\n            (xz + wy) * sz, (yz - wx) * sz, (1 - (xx + yy)) * sz, 0,\n            position.x, position.y, position.z, 1\n        );\n    }\n\n    toString(): string {\n        return `[${this.buffer.join(\", \")}]`;\n    }\n}\n\nexport { Matrix4 };\n","import { Object3D } from \"../core/Object3D\";\n\nclass ObjectAddedEvent extends Event {\n    constructor(public object: Object3D) {\n        super(\"objectAdded\");\n    }\n}\n\nclass ObjectRemovedEvent extends Event {\n    constructor(public object: Object3D) {\n        super(\"objectRemoved\");\n    }\n}\n\nclass ObjectChangedEvent extends Event {\n    constructor(public object: Object3D) {\n        super(\"objectChanged\");\n    }\n}\n\nexport { ObjectAddedEvent, ObjectRemovedEvent, ObjectChangedEvent };\n","import { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { EventDispatcher } from \"../events/EventDispatcher\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { ObjectChangedEvent } from \"../events/Events\";\n\nabstract class Object3D extends EventDispatcher {\n    public positionChanged: boolean = false;\n    public rotationChanged: boolean = false;\n    public scaleChanged: boolean = false;\n\n    protected _position: Vector3 = new Vector3();\n    protected _rotation: Quaternion = new Quaternion();\n    protected _scale: Vector3 = new Vector3(1, 1, 1);\n    protected _transform: Matrix4 = new Matrix4();\n\n    protected _changeEvent = new ObjectChangedEvent(this);\n\n    update: () => void;\n    applyPosition: () => void;\n    applyRotation: () => void;\n    applyScale: () => void;\n    raiseChangeEvent: () => void;\n\n    constructor() {\n        super();\n\n        this.update = () => {};\n\n        this.applyPosition = () => {\n            this.position = new Vector3();\n        };\n\n        this.applyRotation = () => {\n            this.rotation = new Quaternion();\n        };\n\n        this.applyScale = () => {\n            this.scale = new Vector3(1, 1, 1);\n        };\n\n        this.raiseChangeEvent = () => {\n            this.dispatchEvent(this._changeEvent);\n        };\n    }\n\n    protected _updateMatrix() {\n        this._transform = Matrix4.Compose(this._position, this._rotation, this._scale);\n    }\n\n    get position() {\n        return this._position;\n    }\n\n    set position(position: Vector3) {\n        if (!this._position.equals(position)) {\n            this._position = position;\n            this.positionChanged = true;\n            this._updateMatrix();\n            this.dispatchEvent(this._changeEvent);\n        }\n    }\n\n    get rotation() {\n        return this._rotation;\n    }\n\n    set rotation(rotation: Quaternion) {\n        if (!this._rotation.equals(rotation)) {\n            this._rotation = rotation;\n            this.rotationChanged = true;\n            this._updateMatrix();\n            this.dispatchEvent(this._changeEvent);\n        }\n    }\n\n    get scale() {\n        return this._scale;\n    }\n\n    set scale(scale: Vector3) {\n        if (!this._scale.equals(scale)) {\n            this._scale = scale;\n            this.scaleChanged = true;\n            this._updateMatrix();\n            this.dispatchEvent(this._changeEvent);\n        }\n    }\n\n    get forward() {\n        let forward = new Vector3(0, 0, 1);\n        forward = this.rotation.apply(forward);\n        return forward;\n    }\n\n    get transform() {\n        return this._transform;\n    }\n}\n\nexport { Object3D };\n","import { Quaternion } from \"./Quaternion\";\nimport type { Vector3 } from \"./Vector3\";\n\nclass Matrix3 {\n    public readonly buffer: number[];\n\n    // prettier-ignore\n    constructor(n11: number = 1, n12: number = 0, n13: number = 0,\n                n21: number = 0, n22: number = 1, n23: number = 0,\n                n31: number = 0, n32: number = 0, n33: number = 1) {\n        this.buffer = [\n            n11, n12, n13,\n            n21, n22, n23,\n            n31, n32, n33\n        ];\n    }\n\n    equals(m: Matrix3): boolean {\n        if (this.buffer.length !== m.buffer.length) {\n            return false;\n        }\n        if (this.buffer === m.buffer) {\n            return true;\n        }\n        for (let i = 0; i < this.buffer.length; i++) {\n            if (this.buffer[i] !== m.buffer[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    multiply(v: Matrix3): Matrix3 {\n        const a = this.buffer;\n        const b = v.buffer;\n        return new Matrix3(\n            b[0] * a[0] + b[3] * a[1] + b[6] * a[2],\n            b[1] * a[0] + b[4] * a[1] + b[7] * a[2],\n            b[2] * a[0] + b[5] * a[1] + b[8] * a[2],\n            b[0] * a[3] + b[3] * a[4] + b[6] * a[5],\n            b[1] * a[3] + b[4] * a[4] + b[7] * a[5],\n            b[2] * a[3] + b[5] * a[4] + b[8] * a[5],\n            b[0] * a[6] + b[3] * a[7] + b[6] * a[8],\n            b[1] * a[6] + b[4] * a[7] + b[7] * a[8],\n            b[2] * a[6] + b[5] * a[7] + b[8] * a[8],\n        );\n    }\n\n    clone(): Matrix3 {\n        const e = this.buffer;\n        // prettier-ignore\n        return new Matrix3(\n            e[0], e[1], e[2],\n            e[3], e[4], e[5],\n            e[6], e[7], e[8]\n        );\n    }\n\n    static Eye(v: number = 1): Matrix3 {\n        return new Matrix3(v, 0, 0, 0, v, 0, 0, 0, v);\n    }\n\n    static Diagonal(v: Vector3): Matrix3 {\n        return new Matrix3(v.x, 0, 0, 0, v.y, 0, 0, 0, v.z);\n    }\n\n    static RotationFromQuaternion(q: Quaternion): Matrix3 {\n        const matrix = new Matrix3(\n            1 - 2 * q.y * q.y - 2 * q.z * q.z,\n            2 * q.x * q.y - 2 * q.z * q.w,\n            2 * q.x * q.z + 2 * q.y * q.w,\n            2 * q.x * q.y + 2 * q.z * q.w,\n            1 - 2 * q.x * q.x - 2 * q.z * q.z,\n            2 * q.y * q.z - 2 * q.x * q.w,\n            2 * q.x * q.z - 2 * q.y * q.w,\n            2 * q.y * q.z + 2 * q.x * q.w,\n            1 - 2 * q.x * q.x - 2 * q.y * q.y,\n        );\n        return matrix;\n    }\n\n    static RotationFromEuler(m: Vector3): Matrix3 {\n        const cx = Math.cos(m.x);\n        const sx = Math.sin(m.x);\n        const cy = Math.cos(m.y);\n        const sy = Math.sin(m.y);\n        const cz = Math.cos(m.z);\n        const sz = Math.sin(m.z);\n\n        const rotationMatrix = [\n            cy * cz + sy * sx * sz,\n            -cy * sz + sy * sx * cz,\n            sy * cx,\n            cx * sz,\n            cx * cz,\n            -sx,\n            -sy * cz + cy * sx * sz,\n            sy * sz + cy * sx * cz,\n            cy * cx,\n        ];\n\n        return new Matrix3(...rotationMatrix);\n    }\n\n    toString(): string {\n        return `[${this.buffer.join(\", \")}]`;\n    }\n}\n\nexport { Matrix3 };\n","import { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Matrix3 } from \"../math/Matrix3\";\n\nclass SplatData {\n    static RowLength = 3 * 4 + 3 * 4 + 4 + 4;\n\n    public changed = false;\n    public detached = false;\n\n    private _vertexCount: number;\n    private _positions: Float32Array;\n    private _rotations: Float32Array;\n    private _scales: Float32Array;\n    private _colors: Uint8Array;\n    private _selection: Uint8Array;\n\n    translate: (translation: Vector3) => void;\n    rotate: (rotation: Quaternion) => void;\n    scale: (scale: Vector3) => void;\n    serialize: () => Uint8Array;\n    reattach: (\n        positions: ArrayBufferLike,\n        rotations: ArrayBufferLike,\n        scales: ArrayBufferLike,\n        colors: ArrayBufferLike,\n        selection: ArrayBufferLike,\n    ) => void;\n\n    constructor(\n        vertexCount: number = 0,\n        positions: Float32Array | null = null,\n        rotations: Float32Array | null = null,\n        scales: Float32Array | null = null,\n        colors: Uint8Array | null = null,\n    ) {\n        this._vertexCount = vertexCount;\n        this._positions = positions || new Float32Array(0);\n        this._rotations = rotations || new Float32Array(0);\n        this._scales = scales || new Float32Array(0);\n        this._colors = colors || new Uint8Array(0);\n        this._selection = new Uint8Array(this.vertexCount);\n\n        this.translate = (translation: Vector3) => {\n            for (let i = 0; i < this.vertexCount; i++) {\n                this.positions[3 * i + 0] += translation.x;\n                this.positions[3 * i + 1] += translation.y;\n                this.positions[3 * i + 2] += translation.z;\n            }\n\n            this.changed = true;\n        };\n\n        this.rotate = (rotation: Quaternion) => {\n            const R = Matrix3.RotationFromQuaternion(rotation).buffer;\n            for (let i = 0; i < this.vertexCount; i++) {\n                const x = this.positions[3 * i + 0];\n                const y = this.positions[3 * i + 1];\n                const z = this.positions[3 * i + 2];\n\n                this.positions[3 * i + 0] = R[0] * x + R[1] * y + R[2] * z;\n                this.positions[3 * i + 1] = R[3] * x + R[4] * y + R[5] * z;\n                this.positions[3 * i + 2] = R[6] * x + R[7] * y + R[8] * z;\n\n                const currentRotation = new Quaternion(\n                    this.rotations[4 * i + 1],\n                    this.rotations[4 * i + 2],\n                    this.rotations[4 * i + 3],\n                    this.rotations[4 * i + 0],\n                );\n\n                const newRot = rotation.multiply(currentRotation);\n                this.rotations[4 * i + 1] = newRot.x;\n                this.rotations[4 * i + 2] = newRot.y;\n                this.rotations[4 * i + 3] = newRot.z;\n                this.rotations[4 * i + 0] = newRot.w;\n            }\n\n            this.changed = true;\n        };\n\n        this.scale = (scale: Vector3) => {\n            for (let i = 0; i < this.vertexCount; i++) {\n                this.positions[3 * i + 0] *= scale.x;\n                this.positions[3 * i + 1] *= scale.y;\n                this.positions[3 * i + 2] *= scale.z;\n\n                this.scales[3 * i + 0] *= scale.x;\n                this.scales[3 * i + 1] *= scale.y;\n                this.scales[3 * i + 2] *= scale.z;\n            }\n\n            this.changed = true;\n        };\n\n        this.serialize = () => {\n            const data = new Uint8Array(this.vertexCount * SplatData.RowLength);\n\n            const f_buffer = new Float32Array(data.buffer);\n            const u_buffer = new Uint8Array(data.buffer);\n\n            for (let i = 0; i < this.vertexCount; i++) {\n                f_buffer[8 * i + 0] = this.positions[3 * i + 0];\n                f_buffer[8 * i + 1] = this.positions[3 * i + 1];\n                f_buffer[8 * i + 2] = this.positions[3 * i + 2];\n\n                u_buffer[32 * i + 24 + 0] = this.colors[4 * i + 0];\n                u_buffer[32 * i + 24 + 1] = this.colors[4 * i + 1];\n                u_buffer[32 * i + 24 + 2] = this.colors[4 * i + 2];\n                u_buffer[32 * i + 24 + 3] = this.colors[4 * i + 3];\n\n                f_buffer[8 * i + 3 + 0] = this.scales[3 * i + 0];\n                f_buffer[8 * i + 3 + 1] = this.scales[3 * i + 1];\n                f_buffer[8 * i + 3 + 2] = this.scales[3 * i + 2];\n\n                u_buffer[32 * i + 28 + 0] = (this.rotations[4 * i + 0] * 128 + 128) & 0xff;\n                u_buffer[32 * i + 28 + 1] = (this.rotations[4 * i + 1] * 128 + 128) & 0xff;\n                u_buffer[32 * i + 28 + 2] = (this.rotations[4 * i + 2] * 128 + 128) & 0xff;\n                u_buffer[32 * i + 28 + 3] = (this.rotations[4 * i + 3] * 128 + 128) & 0xff;\n            }\n\n            return data;\n        };\n\n        this.reattach = (\n            positions: ArrayBufferLike,\n            rotations: ArrayBufferLike,\n            scales: ArrayBufferLike,\n            colors: ArrayBufferLike,\n            selection: ArrayBufferLike,\n        ) => {\n            console.assert(\n                positions.byteLength === this.vertexCount * 3 * 4,\n                `Expected ${this.vertexCount * 3 * 4} bytes, got ${positions.byteLength} bytes`,\n            );\n            this._positions = new Float32Array(positions);\n            this._rotations = new Float32Array(rotations);\n            this._scales = new Float32Array(scales);\n            this._colors = new Uint8Array(colors);\n            this._selection = new Uint8Array(selection);\n            this.detached = false;\n        };\n    }\n\n    static Deserialize(data: Uint8Array): SplatData {\n        const vertexCount = data.length / SplatData.RowLength;\n        const positions = new Float32Array(3 * vertexCount);\n        const rotations = new Float32Array(4 * vertexCount);\n        const scales = new Float32Array(3 * vertexCount);\n        const colors = new Uint8Array(4 * vertexCount);\n\n        const f_buffer = new Float32Array(data.buffer);\n        const u_buffer = new Uint8Array(data.buffer);\n\n        for (let i = 0; i < vertexCount; i++) {\n            positions[3 * i + 0] = f_buffer[8 * i + 0];\n            positions[3 * i + 1] = f_buffer[8 * i + 1];\n            positions[3 * i + 2] = f_buffer[8 * i + 2];\n\n            rotations[4 * i + 0] = (u_buffer[32 * i + 28 + 0] - 128) / 128;\n            rotations[4 * i + 1] = (u_buffer[32 * i + 28 + 1] - 128) / 128;\n            rotations[4 * i + 2] = (u_buffer[32 * i + 28 + 2] - 128) / 128;\n            rotations[4 * i + 3] = (u_buffer[32 * i + 28 + 3] - 128) / 128;\n\n            scales[3 * i + 0] = f_buffer[8 * i + 3 + 0];\n            scales[3 * i + 1] = f_buffer[8 * i + 3 + 1];\n            scales[3 * i + 2] = f_buffer[8 * i + 3 + 2];\n\n            colors[4 * i + 0] = u_buffer[32 * i + 24 + 0];\n            colors[4 * i + 1] = u_buffer[32 * i + 24 + 1];\n            colors[4 * i + 2] = u_buffer[32 * i + 24 + 2];\n            colors[4 * i + 3] = u_buffer[32 * i + 24 + 3];\n        }\n\n        return new SplatData(vertexCount, positions, rotations, scales, colors);\n    }\n\n    get vertexCount() {\n        return this._vertexCount;\n    }\n\n    get positions() {\n        return this._positions;\n    }\n\n    get rotations() {\n        return this._rotations;\n    }\n\n    get scales() {\n        return this._scales;\n    }\n\n    get colors() {\n        return this._colors;\n    }\n\n    get selection() {\n        return this._selection;\n    }\n}\n\nexport { SplatData };\n","class SplatvData {\n    static RowLength = 64;\n\n    private _vertexCount: number;\n    private _positions: Float32Array;\n    private _data: Uint32Array;\n    private _width: number;\n    private _height: number;\n\n    serialize: () => Uint8Array;\n\n    constructor(vertexCount: number, positions: Float32Array, data: Uint32Array, width: number, height: number) {\n        this._vertexCount = vertexCount;\n        this._positions = positions;\n        this._data = data;\n        this._width = width;\n        this._height = height;\n\n        this.serialize = () => {\n            return new Uint8Array(this._data.buffer);\n        };\n    }\n\n    static Deserialize(data: Uint8Array, width: number, height: number): SplatvData {\n        const buffer = new Uint32Array(data.buffer);\n        const f_buffer = new Float32Array(data.buffer);\n        const vertexCount = Math.floor(f_buffer.byteLength / this.RowLength);\n        const positions = new Float32Array(vertexCount * 3);\n        for (let i = 0; i < vertexCount; i++) {\n            positions[3 * i + 0] = f_buffer[16 * i + 0];\n            positions[3 * i + 1] = f_buffer[16 * i + 1];\n            positions[3 * i + 2] = f_buffer[16 * i + 2];\n            positions[3 * i + 0] = f_buffer[16 * i + 3];\n        }\n        return new SplatvData(vertexCount, positions, buffer, width, height);\n    }\n\n    get vertexCount() {\n        return this._vertexCount;\n    }\n\n    get positions() {\n        return this._positions;\n    }\n\n    get data() {\n        return this._data;\n    }\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n}\n\nexport { SplatvData };\n","import { Quaternion } from \"../math/Quaternion\";\n\nclass Converter {\n    public static SH_C0 = 0.28209479177387814;\n\n    public static SplatToPLY(buffer: ArrayBuffer, vertexCount: number): ArrayBuffer {\n        let header = \"ply\\nformat binary_little_endian 1.0\\n\";\n        header += `element vertex ${vertexCount}\\n`;\n\n        const properties = [\"x\", \"y\", \"z\", \"nx\", \"ny\", \"nz\", \"f_dc_0\", \"f_dc_1\", \"f_dc_2\"];\n        for (let i = 0; i < 45; i++) {\n            properties.push(`f_rest_${i}`);\n        }\n        properties.push(\"opacity\");\n        properties.push(\"scale_0\");\n        properties.push(\"scale_1\");\n        properties.push(\"scale_2\");\n        properties.push(\"rot_0\");\n        properties.push(\"rot_1\");\n        properties.push(\"rot_2\");\n        properties.push(\"rot_3\");\n\n        for (const property of properties) {\n            header += `property float ${property}\\n`;\n        }\n        header += \"end_header\\n\";\n\n        const headerBuffer = new TextEncoder().encode(header);\n\n        const plyRowLength = 4 * 3 + 4 * 3 + 4 * 3 + 4 * 45 + 4 + 4 * 3 + 4 * 4;\n        const plyLength = vertexCount * plyRowLength;\n        const output = new DataView(new ArrayBuffer(headerBuffer.length + plyLength));\n        new Uint8Array(output.buffer).set(headerBuffer, 0);\n\n        const f_buffer = new Float32Array(buffer);\n        const u_buffer = new Uint8Array(buffer);\n\n        const offset = headerBuffer.length;\n        const f_dc_offset = 4 * 3 + 4 * 3;\n        const opacity_offset = f_dc_offset + 4 * 3 + 4 * 45;\n        const scale_offset = opacity_offset + 4;\n        const rot_offset = scale_offset + 4 * 3;\n        for (let i = 0; i < vertexCount; i++) {\n            const pos0 = f_buffer[8 * i + 0];\n            const pos1 = f_buffer[8 * i + 1];\n            const pos2 = f_buffer[8 * i + 2];\n\n            const f_dc_0 = (u_buffer[32 * i + 24 + 0] / 255 - 0.5) / this.SH_C0;\n            const f_dc_1 = (u_buffer[32 * i + 24 + 1] / 255 - 0.5) / this.SH_C0;\n            const f_dc_2 = (u_buffer[32 * i + 24 + 2] / 255 - 0.5) / this.SH_C0;\n\n            const alpha = u_buffer[32 * i + 24 + 3] / 255;\n            const opacity = Math.log(alpha / (1 - alpha));\n\n            const scale0 = Math.log(f_buffer[8 * i + 3 + 0]);\n            const scale1 = Math.log(f_buffer[8 * i + 3 + 1]);\n            const scale2 = Math.log(f_buffer[8 * i + 3 + 2]);\n\n            let q = new Quaternion(\n                (u_buffer[32 * i + 28 + 1] - 128) / 128,\n                (u_buffer[32 * i + 28 + 2] - 128) / 128,\n                (u_buffer[32 * i + 28 + 3] - 128) / 128,\n                (u_buffer[32 * i + 28 + 0] - 128) / 128,\n            );\n            q = q.normalize();\n\n            const rot0 = q.w;\n            const rot1 = q.x;\n            const rot2 = q.y;\n            const rot3 = q.z;\n\n            output.setFloat32(offset + plyRowLength * i + 0, pos0, true);\n            output.setFloat32(offset + plyRowLength * i + 4, pos1, true);\n            output.setFloat32(offset + plyRowLength * i + 8, pos2, true);\n\n            output.setFloat32(offset + plyRowLength * i + f_dc_offset + 0, f_dc_0, true);\n            output.setFloat32(offset + plyRowLength * i + f_dc_offset + 4, f_dc_1, true);\n            output.setFloat32(offset + plyRowLength * i + f_dc_offset + 8, f_dc_2, true);\n\n            output.setFloat32(offset + plyRowLength * i + opacity_offset, opacity, true);\n\n            output.setFloat32(offset + plyRowLength * i + scale_offset + 0, scale0, true);\n            output.setFloat32(offset + plyRowLength * i + scale_offset + 4, scale1, true);\n            output.setFloat32(offset + plyRowLength * i + scale_offset + 8, scale2, true);\n\n            output.setFloat32(offset + plyRowLength * i + rot_offset + 0, rot0, true);\n            output.setFloat32(offset + plyRowLength * i + rot_offset + 4, rot1, true);\n            output.setFloat32(offset + plyRowLength * i + rot_offset + 8, rot2, true);\n            output.setFloat32(offset + plyRowLength * i + rot_offset + 12, rot3, true);\n        }\n\n        return output.buffer;\n    }\n}\n\nexport { Converter };\n","import { Vector3 } from \"./Vector3\";\n\nclass Box3 {\n    constructor(\n        public min: Vector3,\n        public max: Vector3,\n    ) {}\n\n    public contains(point: Vector3) {\n        return (\n            point.x >= this.min.x &&\n            point.x <= this.max.x &&\n            point.y >= this.min.y &&\n            point.y <= this.max.y &&\n            point.z >= this.min.z &&\n            point.z <= this.max.z\n        );\n    }\n\n    public intersects(box: Box3) {\n        return (\n            this.max.x >= box.min.x &&\n            this.min.x <= box.max.x &&\n            this.max.y >= box.min.y &&\n            this.min.y <= box.max.y &&\n            this.max.z >= box.min.z &&\n            this.min.z <= box.max.z\n        );\n    }\n\n    public size() {\n        return this.max.subtract(this.min);\n    }\n\n    public center() {\n        return this.min.add(this.max).divide(2);\n    }\n\n    public expand(point: Vector3) {\n        this.min = this.min.min(point);\n        this.max = this.max.max(point);\n    }\n\n    public permute() {\n        const min = this.min;\n        const max = this.max;\n        this.min = new Vector3(Math.min(min.x, max.x), Math.min(min.y, max.y), Math.min(min.z, max.z));\n        this.max = new Vector3(Math.max(min.x, max.x), Math.max(min.y, max.y), Math.max(min.z, max.z));\n    }\n}\n\nexport { Box3 };\n","import { SplatData } from \"./SplatData\";\nimport { Object3D } from \"../core/Object3D\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Converter } from \"../utils/Converter\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { Box3 } from \"../math/Box3\";\n\nclass Splat extends Object3D {\n    public selectedChanged: boolean = false;\n    public colorTransformChanged: boolean = false;\n\n    private _data: SplatData;\n    private _selected: boolean = false;\n    private _colorTransforms: Array<Matrix4> = [];\n    private _colorTransformsMap: Map<number, number> = new Map();\n    private _bounds: Box3;\n\n    recalculateBounds: () => void;\n\n    constructor(splat: SplatData | undefined = undefined) {\n        super();\n\n        this._data = splat || new SplatData();\n        this._bounds = new Box3(\n            new Vector3(Infinity, Infinity, Infinity),\n            new Vector3(-Infinity, -Infinity, -Infinity),\n        );\n\n        this.recalculateBounds = () => {\n            this._bounds = new Box3(\n                new Vector3(Infinity, Infinity, Infinity),\n                new Vector3(-Infinity, -Infinity, -Infinity),\n            );\n            for (let i = 0; i < this._data.vertexCount; i++) {\n                this._bounds.expand(\n                    new Vector3(\n                        this._data.positions[3 * i],\n                        this._data.positions[3 * i + 1],\n                        this._data.positions[3 * i + 2],\n                    ),\n                );\n            }\n        };\n\n        this.applyPosition = () => {\n            this.data.translate(this.position);\n            this.position = new Vector3();\n        };\n\n        this.applyRotation = () => {\n            this.data.rotate(this.rotation);\n            this.rotation = new Quaternion();\n        };\n\n        this.applyScale = () => {\n            this.data.scale(this.scale);\n            this.scale = new Vector3(1, 1, 1);\n        };\n\n        this.recalculateBounds();\n    }\n\n    saveToFile(name: string | null = null, format: string | null = null) {\n        if (!document) return;\n\n        if (!format) {\n            format = \"splat\";\n        } else if (format !== \"splat\" && format !== \"ply\") {\n            throw new Error(\"Invalid format. Must be 'splat' or 'ply'\");\n        }\n\n        if (!name) {\n            const now = new Date();\n            name = `splat-${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}.${format}`;\n        }\n\n        this.applyRotation();\n        this.applyScale();\n        this.applyPosition();\n\n        const data = this.data.serialize();\n        let blob;\n        if (format === \"ply\") {\n            const plyData = Converter.SplatToPLY(data.buffer, this.data.vertexCount);\n            blob = new Blob([plyData], { type: \"application/octet-stream\" });\n        } else {\n            blob = new Blob([data.buffer], { type: \"application/octet-stream\" });\n        }\n\n        const link = document.createElement(\"a\");\n        link.download = name;\n        link.href = URL.createObjectURL(blob);\n        link.click();\n    }\n\n    get data() {\n        return this._data;\n    }\n\n    get selected() {\n        return this._selected;\n    }\n\n    set selected(selected: boolean) {\n        if (this._selected !== selected) {\n            this._selected = selected;\n            this.selectedChanged = true;\n            this.dispatchEvent(this._changeEvent);\n        }\n    }\n\n    get colorTransforms() {\n        return this._colorTransforms;\n    }\n\n    get colorTransformsMap() {\n        return this._colorTransformsMap;\n    }\n\n    get bounds() {\n        let center = this._bounds.center();\n        center = center.add(this.position);\n\n        let size = this._bounds.size();\n        size = size.multiply(this.scale);\n\n        return new Box3(center.subtract(size.divide(2)), center.add(size.divide(2)));\n    }\n}\n\nexport { Splat };\n","import { Object3D } from \"../core/Object3D\";\nimport { SplatvData } from \"./SplatvData\";\n\nclass Splatv extends Object3D {\n    private _data: SplatvData;\n\n    constructor(splat: SplatvData) {\n        super();\n\n        this._data = splat;\n    }\n\n    get data() {\n        return this._data;\n    }\n}\n\nexport { Splatv };\n","import { Quaternion } from \"../math/Quaternion\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { Vector3 } from \"../math/Vector3\";\n\nclass CameraData {\n    private _fx: number = 1132;\n    private _fy: number = 1132;\n    private _near: number = 0.1;\n    private _far: number = 100;\n\n    private _width: number = 512;\n    private _height: number = 512;\n\n    private _projectionMatrix: Matrix4 = new Matrix4();\n    private _viewMatrix: Matrix4 = new Matrix4();\n    private _viewProj: Matrix4 = new Matrix4();\n\n    update: (position: Vector3, rotation: Quaternion) => void;\n    setSize: (width: number, height: number) => void;\n\n    private _updateProjectionMatrix: () => void;\n\n    constructor() {\n        this._updateProjectionMatrix = () => {\n            // prettier-ignore\n            this._projectionMatrix = new Matrix4(\n                2 * this.fx / this.width, 0, 0, 0,\n                0, -2 * this.fy / this.height, 0, 0,\n                0, 0, this.far / (this.far - this.near), 1,\n                0, 0, -(this.far * this.near) / (this.far - this.near), 0\n            );\n\n            this._viewProj = this.projectionMatrix.multiply(this.viewMatrix);\n        };\n\n        this.update = (position: Vector3, rotation: Quaternion) => {\n            const R = Matrix3.RotationFromQuaternion(rotation).buffer;\n            const t = position.flat();\n\n            // prettier-ignore\n            this._viewMatrix = new Matrix4(\n                R[0], R[1], R[2], 0,\n                R[3], R[4], R[5], 0,\n                R[6], R[7], R[8], 0,\n                -t[0] * R[0] - t[1] * R[3] - t[2] * R[6],\n                -t[0] * R[1] - t[1] * R[4] - t[2] * R[7],\n                -t[0] * R[2] - t[1] * R[5] - t[2] * R[8],\n                1,\n            );\n\n            this._viewProj = this.projectionMatrix.multiply(this.viewMatrix);\n        };\n\n        this.setSize = (width: number, height: number) => {\n            this._width = width;\n            this._height = height;\n            this._updateProjectionMatrix();\n        };\n    }\n\n    get fx() {\n        return this._fx;\n    }\n\n    set fx(fx: number) {\n        if (this._fx !== fx) {\n            this._fx = fx;\n            this._updateProjectionMatrix();\n        }\n    }\n\n    get fy() {\n        return this._fy;\n    }\n\n    set fy(fy: number) {\n        if (this._fy !== fy) {\n            this._fy = fy;\n            this._updateProjectionMatrix();\n        }\n    }\n\n    get near() {\n        return this._near;\n    }\n\n    set near(near: number) {\n        if (this._near !== near) {\n            this._near = near;\n            this._updateProjectionMatrix();\n        }\n    }\n\n    get far() {\n        return this._far;\n    }\n\n    set far(far: number) {\n        if (this._far !== far) {\n            this._far = far;\n            this._updateProjectionMatrix();\n        }\n    }\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get projectionMatrix() {\n        return this._projectionMatrix;\n    }\n\n    get viewMatrix() {\n        return this._viewMatrix;\n    }\n\n    get viewProj() {\n        return this._viewProj;\n    }\n}\n\nexport { CameraData };\n","import { Matrix4 } from \"./Matrix4\";\n\nclass Vector4 {\n    public readonly x: number;\n    public readonly y: number;\n    public readonly z: number;\n    public readonly w: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n\n    equals(v: Vector4): boolean {\n        if (this.x !== v.x) {\n            return false;\n        }\n        if (this.y !== v.y) {\n            return false;\n        }\n        if (this.z !== v.z) {\n            return false;\n        }\n        if (this.w !== v.w) {\n            return false;\n        }\n\n        return true;\n    }\n\n    add(v: number): Vector4;\n    add(v: Vector4): Vector4;\n    add(v: number | Vector4): Vector4 {\n        if (typeof v === \"number\") {\n            return new Vector4(this.x + v, this.y + v, this.z + v, this.w + v);\n        } else {\n            return new Vector4(this.x + v.x, this.y + v.y, this.z + v.z, this.w + v.w);\n        }\n    }\n\n    subtract(v: number): Vector4;\n    subtract(v: Vector4): Vector4;\n    subtract(v: number | Vector4): Vector4 {\n        if (typeof v === \"number\") {\n            return new Vector4(this.x - v, this.y - v, this.z - v, this.w - v);\n        } else {\n            return new Vector4(this.x - v.x, this.y - v.y, this.z - v.z, this.w - v.w);\n        }\n    }\n\n    multiply(v: number): Vector4;\n    multiply(v: Vector4): Vector4;\n    multiply(v: Matrix4): Vector4;\n    multiply(v: number | Vector4 | Matrix4): Vector4 {\n        if (typeof v === \"number\") {\n            return new Vector4(this.x * v, this.y * v, this.z * v, this.w * v);\n        } else if (v instanceof Vector4) {\n            return new Vector4(this.x * v.x, this.y * v.y, this.z * v.z, this.w * v.w);\n        } else {\n            return new Vector4(\n                this.x * v.buffer[0] + this.y * v.buffer[4] + this.z * v.buffer[8] + this.w * v.buffer[12],\n                this.x * v.buffer[1] + this.y * v.buffer[5] + this.z * v.buffer[9] + this.w * v.buffer[13],\n                this.x * v.buffer[2] + this.y * v.buffer[6] + this.z * v.buffer[10] + this.w * v.buffer[14],\n                this.x * v.buffer[3] + this.y * v.buffer[7] + this.z * v.buffer[11] + this.w * v.buffer[15],\n            );\n        }\n    }\n\n    dot(v: Vector4): number {\n        return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n    }\n\n    lerp(v: Vector4, t: number): Vector4 {\n        return new Vector4(\n            this.x + (v.x - this.x) * t,\n            this.y + (v.y - this.y) * t,\n            this.z + (v.z - this.z) * t,\n            this.w + (v.w - this.w) * t,\n        );\n    }\n\n    magnitude(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n    }\n\n    distanceTo(v: Vector4): number {\n        return Math.sqrt((this.x - v.x) ** 2 + (this.y - v.y) ** 2 + (this.z - v.z) ** 2 + (this.w - v.w) ** 2);\n    }\n\n    normalize(): Vector4 {\n        const length = this.magnitude();\n\n        return new Vector4(this.x / length, this.y / length, this.z / length, this.w / length);\n    }\n\n    flat(): number[] {\n        return [this.x, this.y, this.z, this.w];\n    }\n\n    clone(): Vector4 {\n        return new Vector4(this.x, this.y, this.z, this.w);\n    }\n\n    toString(): string {\n        return `[${this.flat().join(\", \")}]`;\n    }\n}\n\nexport { Vector4 };\n","import { CameraData } from \"./CameraData\";\nimport { Object3D } from \"../core/Object3D\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Vector4 } from \"../math/Vector4\";\n\nclass Camera extends Object3D {\n    private _data: CameraData;\n\n    screenPointToRay: (x: number, y: number) => Vector3;\n\n    constructor(camera: CameraData | undefined = undefined) {\n        super();\n\n        this._data = camera ? camera : new CameraData();\n        this._position = new Vector3(0, 0, -5);\n\n        this.update = () => {\n            this.data.update(this.position, this.rotation);\n        };\n\n        this.screenPointToRay = (x: number, y: number) => {\n            const clipSpaceCoords = new Vector4(x, y, -1, 1);\n            const inverseProjectionMatrix = this._data.projectionMatrix.invert();\n            const cameraSpaceCoords = clipSpaceCoords.multiply(inverseProjectionMatrix);\n            const inverseViewMatrix = this._data.viewMatrix.invert();\n            const worldSpaceCoords = cameraSpaceCoords.multiply(inverseViewMatrix);\n            const worldSpacePosition = new Vector3(\n                worldSpaceCoords.x / worldSpaceCoords.w,\n                worldSpaceCoords.y / worldSpaceCoords.w,\n                worldSpaceCoords.z / worldSpaceCoords.w,\n            );\n            const direction = worldSpacePosition.subtract(this.position).normalize();\n            return direction;\n        };\n    }\n\n    get data() {\n        return this._data;\n    }\n}\n\nexport { Camera };\n","import { Object3D } from \"./Object3D\";\nimport { SplatData } from \"../splats/SplatData\";\nimport { Splat } from \"../splats/Splat\";\nimport { EventDispatcher } from \"../events/EventDispatcher\";\nimport { ObjectAddedEvent, ObjectRemovedEvent } from \"../events/Events\";\nimport { Converter } from \"../utils/Converter\";\n\nclass Scene extends EventDispatcher {\n    private _objects: Object3D[] = [];\n\n    addObject: (object: Object3D) => void;\n    removeObject: (object: Object3D) => void;\n    findObject: (predicate: (object: Object3D) => boolean) => Object3D | undefined;\n    findObjectOfType: <T extends Object3D>(type: { new (): T }) => T | undefined;\n    reset: () => void;\n\n    constructor() {\n        super();\n\n        this.addObject = (object: Object3D) => {\n            this.objects.push(object);\n            this.dispatchEvent(new ObjectAddedEvent(object));\n        };\n\n        this.removeObject = (object: Object3D) => {\n            const index = this.objects.indexOf(object);\n            if (index < 0) {\n                throw new Error(\"Object not found in scene\");\n            }\n            this.objects.splice(index, 1);\n            this.dispatchEvent(new ObjectRemovedEvent(object));\n        };\n\n        this.findObject = (predicate: (object: Object3D) => boolean) => {\n            for (const object of this.objects) {\n                if (predicate(object)) {\n                    return object;\n                }\n            }\n            return undefined;\n        };\n\n        this.findObjectOfType = <T extends Object3D>(type: { new (): T }) => {\n            for (const object of this.objects) {\n                if (object instanceof type) {\n                    return object;\n                }\n            }\n            return undefined;\n        };\n\n        this.reset = () => {\n            const objectsToRemove = this.objects.slice();\n            for (const object of objectsToRemove) {\n                this.removeObject(object);\n            }\n        };\n\n        this.reset();\n    }\n\n    saveToFile(name: string | null = null, format: string | null = null) {\n        if (!document) return;\n\n        if (!format) {\n            format = \"splat\";\n        } else if (format !== \"splat\" && format !== \"ply\") {\n            throw new Error(\"Invalid format. Must be 'splat' or 'ply'\");\n        }\n\n        if (!name) {\n            const now = new Date();\n            name = `scene-${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}.${format}`;\n        }\n\n        const buffers: Uint8Array[] = [];\n        let vertexCount = 0;\n\n        for (const object of this.objects) {\n            object.applyRotation();\n            object.applyScale();\n            object.applyPosition();\n            if (object instanceof Splat) {\n                const buffer = object.data.serialize();\n                buffers.push(buffer);\n                vertexCount += object.data.vertexCount;\n            }\n        }\n\n        const data = new Uint8Array(vertexCount * SplatData.RowLength);\n        let offset = 0;\n        for (const buffer of buffers) {\n            data.set(buffer, offset);\n            offset += buffer.length;\n        }\n\n        let blob;\n        if (format === \"ply\") {\n            const plyData = Converter.SplatToPLY(data.buffer, vertexCount);\n            blob = new Blob([plyData], { type: \"application/octet-stream\" });\n        } else {\n            blob = new Blob([data.buffer], { type: \"application/octet-stream\" });\n        }\n\n        const link = document.createElement(\"a\");\n        link.download = name;\n        link.href = URL.createObjectURL(blob);\n        link.click();\n    }\n\n    get objects() {\n        return this._objects;\n    }\n}\n\nexport { Scene };\n","export async function initiateFetchRequest(url: string, useCache: boolean): Promise<Response> {\n    const req = await fetch(url, {\n        mode: \"cors\",\n        credentials: \"omit\",\n        cache: useCache ? \"force-cache\" : \"default\",\n    });\n\n    if (req.status != 200) {\n        throw new Error(req.status + \" Unable to load \" + req.url);\n    }\n\n    return req;\n}\n\nexport async function loadDataIntoBuffer(res: Response, onProgress?: (progress: number) => void): Promise<Uint8Array> {\n    const reader = res.body!.getReader();\n\n    const contentLength = parseInt(res.headers.get(\"content-length\") as string);\n    const buffer = new Uint8Array(contentLength);\n\n    let bytesRead = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const { done, value } = await reader.read();\n        if (done) break;\n\n        buffer.set(value, bytesRead);\n        bytesRead += value.length;\n        onProgress?.(bytesRead / contentLength);\n    }\n\n    return buffer;\n}\n\nexport async function loadChunkedDataIntoBuffer(\n    res: Response,\n    onProgress?: (progress: number) => void,\n): Promise<Uint8Array> {\n    const reader = res.body!.getReader();\n\n    const chunks = [];\n    let receivedLength = 0;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const { done, value } = await reader.read();\n        if (done) break;\n\n        chunks.push(value);\n        receivedLength += value.length;\n    }\n\n    const buffer = new Uint8Array(receivedLength);\n    let position = 0;\n    for (const chunk of chunks) {\n        buffer.set(chunk, position);\n        position += chunk.length;\n\n        onProgress?.(position / receivedLength);\n    }\n\n    return buffer;\n}\n\nexport async function loadRequestDataIntoBuffer(\n    res: Response,\n    onProgress?: (progress: number) => void,\n): Promise<Uint8Array> {\n    if (res.headers.has(\"content-length\")) {\n        return loadDataIntoBuffer(res, onProgress);\n    } else {\n        return loadChunkedDataIntoBuffer(res, onProgress);\n    }\n}\n","import type { Scene } from \"../core/Scene\";\nimport { Splat } from \"../splats/Splat\";\nimport { SplatData } from \"../splats/SplatData\";\nimport { initiateFetchRequest, loadRequestDataIntoBuffer } from \"../utils/LoaderUtils\";\n\nclass Loader {\n    static async LoadAsync(\n        url: string,\n        scene: Scene,\n        onProgress?: (progress: number) => void,\n        useCache: boolean = false,\n    ): Promise<Splat> {\n        const res: Response = await initiateFetchRequest(url, useCache);\n\n        const buffer = await loadRequestDataIntoBuffer(res, onProgress);\n        return this.LoadFromArrayBuffer(buffer, scene);\n    }\n\n    static async LoadFromFileAsync(file: File, scene: Scene, onProgress?: (progress: number) => void): Promise<Splat> {\n        const reader = new FileReader();\n        let splat = new Splat();\n        reader.onload = (e) => {\n            splat = this.LoadFromArrayBuffer(e.target!.result as ArrayBuffer, scene);\n        };\n        reader.onprogress = (e) => {\n            onProgress?.(e.loaded / e.total);\n        };\n        reader.readAsArrayBuffer(file);\n        await new Promise<void>((resolve) => {\n            reader.onloadend = () => {\n                resolve();\n            };\n        });\n        return splat;\n    }\n\n    static LoadFromArrayBuffer(arrayBuffer: ArrayBufferLike, scene: Scene): Splat {\n        const buffer = new Uint8Array(arrayBuffer);\n        const data = SplatData.Deserialize(buffer);\n        const splat = new Splat(data);\n        scene.addObject(splat);\n        return splat;\n    }\n}\n\nexport { Loader };\n","import { Scene } from \"../core/Scene\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { SplatData } from \"../splats/SplatData\";\nimport { Splat } from \"../splats/Splat\";\nimport { Converter } from \"../utils/Converter\";\nimport { initiateFetchRequest, loadRequestDataIntoBuffer } from \"../utils/LoaderUtils\";\n\nclass PLYLoader {\n    static async LoadAsync(\n        url: string,\n        scene: Scene,\n        onProgress?: (progress: number) => void,\n        format: string = \"\",\n        useCache: boolean = false,\n    ): Promise<Splat> {\n        const res: Response = await initiateFetchRequest(url, useCache);\n\n        const plyData = await loadRequestDataIntoBuffer(res, onProgress);\n\n        if (plyData[0] !== 112 || plyData[1] !== 108 || plyData[2] !== 121 || plyData[3] !== 10) {\n            throw new Error(\"Invalid PLY file\");\n        }\n\n        return this.LoadFromArrayBuffer(plyData.buffer, scene, format);\n    }\n\n    static async LoadFromFileAsync(\n        file: File,\n        scene: Scene,\n        onProgress?: (progress: number) => void,\n        format: string = \"\",\n    ): Promise<Splat> {\n        const reader = new FileReader();\n        let splat = new Splat();\n        reader.onload = (e) => {\n            splat = this.LoadFromArrayBuffer(e.target!.result as ArrayBuffer, scene, format);\n        };\n        reader.onprogress = (e) => {\n            onProgress?.(e.loaded / e.total);\n        };\n        reader.readAsArrayBuffer(file);\n        await new Promise<void>((resolve) => {\n            reader.onloadend = () => {\n                resolve();\n            };\n        });\n        return splat;\n    }\n\n    static LoadFromArrayBuffer(arrayBuffer: ArrayBufferLike, scene: Scene, format: string = \"\"): Splat {\n        const buffer = new Uint8Array(this._ParsePLYBuffer(arrayBuffer, format));\n        const data = SplatData.Deserialize(buffer);\n        const splat = new Splat(data);\n        scene.addObject(splat);\n        return splat;\n    }\n\n    private static _ParsePLYBuffer(inputBuffer: ArrayBuffer, format: string): ArrayBuffer {\n        type PlyProperty = {\n            name: string;\n            type: string;\n            offset: number;\n        };\n\n        const ubuf = new Uint8Array(inputBuffer);\n        const headerText = new TextDecoder().decode(ubuf.slice(0, 1024 * 10));\n        const header_end = \"end_header\\n\";\n        const header_end_index = headerText.indexOf(header_end);\n        if (header_end_index < 0) throw new Error(\"Unable to read .ply file header\");\n\n        const vertexCount = parseInt(/element vertex (\\d+)\\n/.exec(headerText)![1]);\n\n        let rowOffset = 0;\n        const offsets: Record<string, number> = {\n            double: 8,\n            int: 4,\n            uint: 4,\n            float: 4,\n            short: 2,\n            ushort: 2,\n            uchar: 1,\n        };\n\n        const properties: PlyProperty[] = [];\n        for (const prop of headerText\n            .slice(0, header_end_index)\n            .split(\"\\n\")\n            .filter((k) => k.startsWith(\"property \"))) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const [_p, type, name] = prop.split(\" \");\n            properties.push({ name, type, offset: rowOffset });\n            console.log(name, type, rowOffset);\n            if (!offsets[type]) throw new Error(`Unsupported property type: ${type}`);\n            rowOffset += offsets[type];\n        }\n\n        const dataView = new DataView(inputBuffer, header_end_index + header_end.length);\n        const buffer = new ArrayBuffer(SplatData.RowLength * vertexCount);\n\n        const q_polycam = Quaternion.FromEuler(new Vector3(Math.PI / 2, 0, 0));\n\n        for (let i = 0; i < vertexCount; i++) {\n            const position = new Float32Array(buffer, i * SplatData.RowLength, 3);\n            const scale = new Float32Array(buffer, i * SplatData.RowLength + 12, 3);\n            const rgba = new Uint8ClampedArray(buffer, i * SplatData.RowLength + 24, 4);\n            const rot = new Uint8ClampedArray(buffer, i * SplatData.RowLength + 28, 4);\n\n            let r0: number = 255;\n            let r1: number = 0;\n            let r2: number = 0;\n            let r3: number = 0;\n\n            properties.forEach((property) => {\n                let value;\n                switch (property.type) {\n                    case \"float\":\n                        value = dataView.getFloat32(property.offset + i * rowOffset, true);\n                        break;\n                    case \"int\":\n                        value = dataView.getInt32(property.offset + i * rowOffset, true);\n                        break;\n                    default:\n                        throw new Error(`Unsupported property type: ${property.type}`);\n                }\n\n                switch (property.name) {\n                    case \"x\":\n                        position[0] = value;\n                        break;\n                    case \"y\":\n                        position[1] = value;\n                        break;\n                    case \"z\":\n                        position[2] = value;\n                        break;\n                    case \"scale_0\":\n                    case \"scaling_0\":\n                        scale[0] = Math.exp(value);\n                        break;\n                    case \"scale_1\":\n                    case \"scaling_1\":\n                        scale[1] = Math.exp(value);\n                        break;\n                    case \"scale_2\":\n                    case \"scaling_2\":\n                        scale[2] = Math.exp(value);\n                        break;\n                    case \"red\":\n                        rgba[0] = value;\n                        break;\n                    case \"green\":\n                        rgba[1] = value;\n                        break;\n                    case \"blue\":\n                        rgba[2] = value;\n                        break;\n                    case \"f_dc_0\":\n                    case \"features_0\":\n                        rgba[0] = (0.5 + Converter.SH_C0 * value) * 255;\n                        break;\n                    case \"f_dc_1\":\n                    case \"features_1\":\n                        rgba[1] = (0.5 + Converter.SH_C0 * value) * 255;\n                        break;\n                    case \"f_dc_2\":\n                    case \"features_2\":\n                        rgba[2] = (0.5 + Converter.SH_C0 * value) * 255;\n                        break;\n                    case \"f_dc_3\":\n                        rgba[3] = (0.5 + Converter.SH_C0 * value) * 255;\n                        break;\n                    case \"opacity\":\n                    case \"opacity_0\":\n                        rgba[3] = (1 / (1 + Math.exp(-value))) * 255;\n                        break;\n                    case \"rot_0\":\n                    case \"rotation_0\":\n                        r0 = value;\n                        break;\n                    case \"rot_1\":\n                    case \"rotation_1\":\n                        r1 = value;\n                        break;\n                    case \"rot_2\":\n                    case \"rotation_2\":\n                        r2 = value;\n                        break;\n                    case \"rot_3\":\n                    case \"rotation_3\":\n                        r3 = value;\n                        break;\n                }\n            });\n\n            let q = new Quaternion(r1, r2, r3, r0);\n\n            switch (format) {\n                case \"polycam\": {\n                    const temp = position[1];\n                    position[1] = -position[2];\n                    position[2] = temp;\n                    q = q_polycam.multiply(q);\n                    break;\n                }\n                case \"\":\n                    break;\n                default:\n                    throw new Error(`Unsupported format: ${format}`);\n            }\n\n            q = q.normalize();\n            rot[0] = q.w * 128 + 128;\n            rot[1] = q.x * 128 + 128;\n            rot[2] = q.y * 128 + 128;\n            rot[3] = q.z * 128 + 128;\n        }\n\n        return buffer;\n    }\n}\n\nexport { PLYLoader };\n","import { Camera } from \"../cameras/Camera\";\nimport type { Scene } from \"../core/Scene\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Splatv } from \"../splats/Splatv\";\nimport { SplatvData } from \"../splats/SplatvData\";\nimport { initiateFetchRequest, loadRequestDataIntoBuffer } from \"../utils/LoaderUtils\";\n\nclass SplatvLoader {\n    static async LoadAsync(\n        url: string,\n        scene: Scene,\n        camera: Camera | null,\n        onProgress?: (progress: number) => void,\n        useCache: boolean = false,\n    ): Promise<Splatv> {\n        const res: Response = await initiateFetchRequest(url, useCache);\n\n        const buffer = await loadRequestDataIntoBuffer(res, onProgress);\n        return this._ParseSplatvBuffer(buffer.buffer, scene, camera);\n    }\n\n    static async LoadFromFileAsync(\n        file: File,\n        scene: Scene,\n        camera: Camera | null,\n        onProgress?: (progress: number) => void,\n    ): Promise<Splatv> {\n        const reader = new FileReader();\n        let splatv: Splatv | null = null;\n        reader.onload = (e) => {\n            splatv = this._ParseSplatvBuffer(e.target!.result as ArrayBuffer, scene, camera);\n        };\n        reader.onprogress = (e) => {\n            onProgress?.(e.loaded / e.total);\n        };\n        reader.readAsArrayBuffer(file);\n        await new Promise<void>((resolve) => {\n            reader.onloadend = () => {\n                resolve();\n            };\n        });\n        if (!splatv) {\n            throw new Error(\"Failed to load splatv file\");\n        }\n        return splatv;\n    }\n\n    private static _ParseSplatvBuffer(inputBuffer: ArrayBuffer, scene: Scene, camera: Camera | null): Splatv {\n        let result: Splatv | null = null;\n\n        const handleChunk = (\n            chunk: { size: number; type: string; texwidth: number; texheight: number },\n            buffer: Uint8Array,\n            chunks: { size: number; type: string }[],\n        ) => {\n            if (chunk.type === \"magic\") {\n                const intView = new Int32Array(buffer.buffer);\n                if (intView[0] !== 0x674b) {\n                    throw new Error(\"Invalid splatv file\");\n                }\n                chunks.push({ size: intView[1], type: \"chunks\" });\n            } else if (chunk.type === \"chunks\") {\n                const splatChunks = JSON.parse(new TextDecoder(\"utf-8\").decode(buffer));\n                if (splatChunks.length == 0) {\n                    throw new Error(\"Invalid splatv file\");\n                } else if (splatChunks.length > 1) {\n                    console.warn(\"Splatv file contains more than one chunk, only the first one will be loaded\");\n                }\n                const chunk = splatChunks[0];\n                const cameras = chunk.cameras as { position: number[]; rotation: number[][] }[];\n                if (camera && cameras && cameras.length) {\n                    const cameraData = cameras[0];\n                    const position = new Vector3(\n                        cameraData.position[0],\n                        cameraData.position[1],\n                        cameraData.position[2],\n                    );\n                    const rotation = Quaternion.FromMatrix3(\n                        new Matrix3(\n                            cameraData.rotation[0][0],\n                            cameraData.rotation[0][1],\n                            cameraData.rotation[0][2],\n                            cameraData.rotation[1][0],\n                            cameraData.rotation[1][1],\n                            cameraData.rotation[1][2],\n                            cameraData.rotation[2][0],\n                            cameraData.rotation[2][1],\n                            cameraData.rotation[2][2],\n                        ),\n                    );\n                    camera.position = position;\n                    camera.rotation = rotation;\n                }\n                chunks.push(chunk);\n            } else if (chunk.type === \"splat\") {\n                const data = SplatvData.Deserialize(buffer, chunk.texwidth, chunk.texheight);\n                const splatv = new Splatv(data);\n                scene.addObject(splatv);\n                result = splatv;\n            }\n        };\n\n        const ubuf = new Uint8Array(inputBuffer);\n        const chunks: { size: number; type: string; texwidth: number; texheight: number }[] = [\n            { size: 8, type: \"magic\", texwidth: 0, texheight: 0 },\n        ];\n        let chunk: { size: number; type: string; texwidth: number; texheight: number } | undefined = chunks.shift();\n        let buffer = new Uint8Array(chunk!.size);\n        let offset = 0;\n        let inputOffset = 0;\n        while (chunk) {\n            while (offset < chunk.size) {\n                const sizeToRead = Math.min(chunk.size - offset, ubuf.length - inputOffset);\n                buffer.set(ubuf.subarray(inputOffset, inputOffset + sizeToRead), offset);\n                offset += sizeToRead;\n                inputOffset += sizeToRead;\n            }\n            handleChunk(chunk, buffer, chunks);\n            if (result) {\n                return result;\n            }\n            chunk = chunks.shift();\n            if (chunk) {\n                buffer = new Uint8Array(chunk.size);\n                offset = 0;\n            }\n        }\n\n        throw new Error(\"Invalid splatv file\");\n    }\n}\n\nexport { SplatvLoader };\n","import { Camera } from \"../../../cameras/Camera\";\nimport { Scene } from \"../../../core/Scene\";\nimport { WebGLRenderer } from \"../../WebGLRenderer\";\nimport { ShaderPass } from \"../passes/ShaderPass\";\n\nabstract class ShaderProgram {\n    private _renderer: WebGLRenderer;\n    private _program: WebGLProgram;\n    private _passes: ShaderPass[];\n\n    protected _scene: Scene | null = null;\n    protected _camera: Camera | null = null;\n    protected _started: boolean = false;\n    protected _initialized: boolean = false;\n\n    protected abstract _initialize: () => void;\n    protected abstract _resize: () => void;\n    protected abstract _render: () => void;\n    protected abstract _dispose: () => void;\n\n    initialize: () => void;\n    resize: () => void;\n    render: (scene: Scene, camera: Camera) => void;\n    dispose: () => void;\n\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[]) {\n        this._renderer = renderer;\n        const gl = renderer.gl;\n\n        this._program = gl.createProgram() as WebGLProgram;\n        this._passes = passes || [];\n\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER) as WebGLShader;\n        gl.shaderSource(vertexShader, this._getVertexSource());\n        gl.compileShader(vertexShader);\n        if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n            console.error(gl.getShaderInfoLog(vertexShader));\n        }\n\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER) as WebGLShader;\n        gl.shaderSource(fragmentShader, this._getFragmentSource());\n        gl.compileShader(fragmentShader);\n        if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n            console.error(gl.getShaderInfoLog(fragmentShader));\n        }\n\n        gl.attachShader(this.program, vertexShader);\n        gl.attachShader(this.program, fragmentShader);\n        gl.linkProgram(this.program);\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n            console.error(gl.getProgramInfoLog(this.program));\n        }\n\n        this.resize = () => {\n            gl.useProgram(this._program);\n\n            this._resize();\n        };\n\n        this.initialize = () => {\n            console.assert(!this._initialized, \"ShaderProgram already initialized\");\n\n            gl.useProgram(this._program);\n\n            this._initialize();\n            for (const pass of this.passes) {\n                pass.initialize(this);\n            }\n\n            this._initialized = true;\n            this._started = true;\n        };\n\n        this.render = (scene: Scene, camera: Camera) => {\n            gl.useProgram(this._program);\n\n            if (this._scene !== scene || this._camera !== camera) {\n                this.dispose();\n                this._scene = scene;\n                this._camera = camera;\n                this.initialize();\n            }\n\n            for (const pass of this.passes) {\n                pass.render();\n            }\n\n            this._render();\n        };\n\n        this.dispose = () => {\n            if (!this._initialized) return;\n\n            gl.useProgram(this._program);\n\n            for (const pass of this.passes) {\n                pass.dispose();\n            }\n\n            this._dispose();\n\n            this._scene = null;\n            this._camera = null;\n            this._initialized = false;\n        };\n    }\n\n    get renderer() {\n        return this._renderer;\n    }\n\n    get scene() {\n        return this._scene;\n    }\n\n    get camera() {\n        return this._camera;\n    }\n\n    get program() {\n        return this._program;\n    }\n\n    get passes() {\n        return this._passes;\n    }\n\n    get started() {\n        return this._started;\n    }\n\n    protected abstract _getVertexSource(): string;\n    protected abstract _getFragmentSource(): string;\n}\n\nexport { ShaderProgram };\n","\nvar loadWasm = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nfunction(moduleArg = {}) {\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=true;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";var isDataURI=filename=>filename.startsWith(dataURIPrefix);var wasmBinaryFile;wasmBinaryFile=\"data:application/octet-stream;base64,\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(file);if(binary){return binary}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}function getBinaryPromise(binaryFile){return Promise.resolve().then(()=>getBinarySync(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>WebAssembly.instantiate(binary,imports)).then(instance=>instance).then(receiver,reason=>{err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){return instantiateArrayBuffer(binaryFile,imports,callback)}function createWasm(){var info={\"a\":wasmImports};function receiveInstance(instance,module){wasmExports=instance.exports;wasmMemory=wasmExports[\"k\"];updateMemoryViews();addOnInit(wasmExports[\"l\"]);removeRunDependency(\"wasm-instantiate\");return wasmExports}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(`Module.instantiateWasm callback failed with error: ${e}`);readyPromiseReject(e)}}instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var noExitRuntime=Module[\"noExitRuntime\"]||true;var __embind_register_bigint=(primitiveType,name,size,minRange,maxRange)=>{};var embind_init_charCodes=()=>{var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes};var embind_charCodes;var readLatin1String=ptr=>{var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret};var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var BindingError;var throwBindingError=message=>{throw new BindingError(message)};var InternalError;function sharedRegisterType(rawType,registeredInstance,options={}){var name=registeredInstance.name;if(!rawType){throwBindingError(`type \"${name}\" must have a positive integer typeid pointer`)}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(`Cannot register type '${name}' twice`)}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}return sharedRegisterType(rawType,registeredInstance,options)}var GenericWireTypeSize=8;var __embind_register_bool=(rawType,name,trueValue,falseValue)=>{name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":function(pointer){return this[\"fromWireType\"](HEAPU8[pointer])},destructorFunction:null})};function handleAllocatorInit(){Object.assign(HandleAllocator.prototype,{get(id){return this.allocated[id]},has(id){return this.allocated[id]!==undefined},allocate(handle){var id=this.freelist.pop()||this.allocated.length;this.allocated[id]=handle;return id},free(id){this.allocated[id]=undefined;this.freelist.push(id)}})}function HandleAllocator(){this.allocated=[undefined];this.freelist=[]}var emval_handles=new HandleAllocator;var __emval_decref=handle=>{if(handle>=emval_handles.reserved&&0===--emval_handles.get(handle).refcount){emval_handles.free(handle)}};var count_emval_handles=()=>{var count=0;for(var i=emval_handles.reserved;i<emval_handles.allocated.length;++i){if(emval_handles.allocated[i]!==undefined){++count}}return count};var init_emval=()=>{emval_handles.allocated.push({value:undefined},{value:null},{value:true},{value:false});emval_handles.reserved=emval_handles.allocated.length;Module[\"count_emval_handles\"]=count_emval_handles};var Emval={toValue:handle=>{if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handles.get(handle).value},toHandle:value=>{switch(value){case undefined:return 1;case null:return 2;case true:return 3;case false:return 4;default:{return emval_handles.allocate({refcount:1,value:value})}}}};function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAP32[pointer>>2])}var __embind_register_emval=(rawType,name)=>{name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":handle=>{var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":(destructors,value)=>Emval.toHandle(value),\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})};var floatReadValueFromPointer=(name,width)=>{switch(width){case 4:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 8:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(`invalid float width (${width}): ${name}`)}};var __embind_register_float=(rawType,name,size)=>{name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":value=>value,\"toWireType\":(destructors,value)=>value,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":floatReadValueFromPointer(name,size),destructorFunction:null})};var integerReadValueFromPointer=(name,width,signed)=>{switch(width){case 1:return signed?pointer=>HEAP8[pointer>>0]:pointer=>HEAPU8[pointer>>0];case 2:return signed?pointer=>HEAP16[pointer>>1]:pointer=>HEAPU16[pointer>>1];case 4:return signed?pointer=>HEAP32[pointer>>2]:pointer=>HEAPU32[pointer>>2];default:throw new TypeError(`invalid integer width (${width}): ${name}`)}};var __embind_register_integer=(primitiveType,name,size,minRange,maxRange)=>{name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=value=>value<<bitshift>>>bitshift}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":integerReadValueFromPointer(name,size,minRange!==0),destructorFunction:null})};var __embind_register_memory_view=(rawType,dataTypeIndex,name)=>{var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){var size=HEAPU32[handle>>2];var data=HEAPU32[handle+4>>2];return new TA(HEAP8.buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})};function readPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\";var __embind_register_std_string=(rawType,name)=>{name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\"(value){var length=HEAPU32[value>>2];var payload=value+4;var str;if(stdStringIsUTF8){var decodeStartPtr=payload;for(var i=0;i<=length;++i){var currentBytePtr=payload+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[payload+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\"(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var length;var valueIsOfTypeString=typeof value==\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){length=lengthBytesUTF8(value)}else{length=value.length}var base=_malloc(4+length+1);var ptr=base+4;HEAPU32[base>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+i]=value[i]}}}if(destructors!==null){destructors.push(_free,base)}return base},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":readPointer,destructorFunction(ptr){_free(ptr)}})};var UTF16Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;var UTF16ToString=(ptr,maxBytesToRead)=>{var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr));var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str};var stringToUTF16=(str,outPtr,maxBytesToWrite)=>{if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr};var lengthBytesUTF16=str=>str.length*2;var UTF32ToString=(ptr,maxBytesToRead)=>{var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str};var stringToUTF32=(str,outPtr,maxBytesToWrite)=>{if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr};var lengthBytesUTF32=str=>{var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len};var __embind_register_std_wstring=(rawType,charSize,name)=>{name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=()=>HEAPU16;shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=()=>HEAPU32;shift=2}registerType(rawType,{name:name,\"fromWireType\":value=>{var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":(destructors,value)=>{if(!(typeof value==\"string\")){throwBindingError(`Cannot pass non-string to C++ string type ${name}`)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction(ptr){_free(ptr)}})};var __embind_register_void=(rawType,name)=>{name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":()=>undefined,\"toWireType\":(destructors,o)=>undefined})};var getHeapMax=()=>2147483648;var growMemory=size=>{var b=wasmMemory.buffer;var pages=(size-b.byteLength+65535)/65536;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}var alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}return false};embind_init_charCodes();BindingError=Module[\"BindingError\"]=class BindingError extends Error{constructor(message){super(message);this.name=\"BindingError\"}};InternalError=Module[\"InternalError\"]=class InternalError extends Error{constructor(message){super(message);this.name=\"InternalError\"}};handleAllocatorInit();init_emval();var wasmImports={f:__embind_register_bigint,i:__embind_register_bool,h:__embind_register_emval,e:__embind_register_float,b:__embind_register_integer,a:__embind_register_memory_view,d:__embind_register_std_string,c:__embind_register_std_wstring,j:__embind_register_void,g:_emscripten_resize_heap};var wasmExports=createWasm();var ___wasm_call_ctors=()=>(___wasm_call_ctors=wasmExports[\"l\"])();var _pack=Module[\"_pack\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(_pack=Module[\"_pack\"]=wasmExports[\"m\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var ___getTypeName=a0=>(___getTypeName=wasmExports[\"__getTypeName\"])(a0);var __embind_initialize_bindings=Module[\"__embind_initialize_bindings\"]=()=>(__embind_initialize_bindings=Module[\"__embind_initialize_bindings\"]=wasmExports[\"n\"])();var ___errno_location=()=>(___errno_location=wasmExports[\"__errno_location\"])();var _malloc=Module[\"_malloc\"]=a0=>(_malloc=Module[\"_malloc\"]=wasmExports[\"p\"])(a0);var _free=Module[\"_free\"]=a0=>(_free=Module[\"_free\"]=wasmExports[\"q\"])(a0);function intArrayFromBase64(s){var decoded=atob(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return moduleArg.ready\n}\n\n);\n})();\nexport default loadWasm;","import { Scene } from \"../../../core/Scene\";\nimport { Splat } from \"../../../splats/Splat\";\nimport DataWorker from \"web-worker:./DataWorker.ts\";\nimport loadWasm from \"../../../wasm/data\";\nimport { Matrix4 } from \"../../../math/Matrix4\";\n\nclass RenderData {\n    public dataChanged = false;\n    public transformsChanged = false;\n    public colorTransformsChanged = false;\n\n    private _splatIndices: Map<Splat, number>;\n    private _offsets: Map<Splat, number>;\n    private _data: Uint32Array;\n    private _width: number;\n    private _height: number;\n    private _transforms: Float32Array;\n    private _transformsWidth: number;\n    private _transformsHeight: number;\n    private _transformIndices: Uint32Array;\n    private _transformIndicesWidth: number;\n    private _transformIndicesHeight: number;\n    private _colorTransforms: Float32Array;\n    private _colorTransformsWidth: number;\n    private _colorTransformsHeight: number;\n    private _colorTransformIndices: Uint32Array;\n    private _colorTransformIndicesWidth: number;\n    private _colorTransformIndicesHeight: number;\n    private _positions: Float32Array;\n    private _rotations: Float32Array;\n    private _scales: Float32Array;\n    private _vertexCount: number;\n    private _updating: Set<Splat> = new Set<Splat>();\n    private _dirty: Set<Splat> = new Set<Splat>();\n    private _worker: Worker;\n\n    getSplat: (index: number) => Splat | null;\n    getLocalIndex: (splat: Splat, index: number) => number;\n    markDirty: (splat: Splat) => void;\n    rebuild: () => void;\n    dispose: () => void;\n\n    constructor(scene: Scene) {\n        let vertexCount = 0;\n        let splatIndex = 0;\n        this._splatIndices = new Map<Splat, number>();\n        this._offsets = new Map<Splat, number>();\n        const lookup = new Map<number, Splat>();\n        for (const object of scene.objects) {\n            if (object instanceof Splat) {\n                this._splatIndices.set(object, splatIndex);\n                this._offsets.set(object, vertexCount);\n                lookup.set(vertexCount, object);\n                vertexCount += object.data.vertexCount;\n                splatIndex++;\n            }\n        }\n\n        this._vertexCount = vertexCount;\n        this._width = 2048;\n        this._height = Math.ceil((2 * this.vertexCount) / this.width);\n        this._data = new Uint32Array(this.width * this.height * 4);\n\n        this._transformsWidth = 5;\n        this._transformsHeight = lookup.size;\n        this._transforms = new Float32Array(this._transformsWidth * this._transformsHeight * 4);\n\n        this._transformIndicesWidth = 1024;\n        this._transformIndicesHeight = Math.ceil(this.vertexCount / this._transformIndicesWidth);\n        this._transformIndices = new Uint32Array(this._transformIndicesWidth * this._transformIndicesHeight);\n\n        this._colorTransformsWidth = 4;\n        this._colorTransformsHeight = 64;\n        this._colorTransforms = new Float32Array(this._colorTransformsWidth * this._colorTransformsHeight * 4);\n        this._colorTransforms.fill(0);\n        this._colorTransforms[0] = 1;\n        this._colorTransforms[5] = 1;\n        this._colorTransforms[10] = 1;\n        this._colorTransforms[15] = 1;\n\n        this._colorTransformIndicesWidth = 1024;\n        this._colorTransformIndicesHeight = Math.ceil(this.vertexCount / this._colorTransformIndicesWidth);\n        this._colorTransformIndices = new Uint32Array(\n            this._colorTransformIndicesWidth * this._colorTransformIndicesHeight,\n        );\n        this.colorTransformIndices.fill(0);\n\n        this._positions = new Float32Array(this.vertexCount * 3);\n        this._rotations = new Float32Array(this.vertexCount * 4);\n        this._scales = new Float32Array(this.vertexCount * 3);\n\n        this._worker = new DataWorker();\n\n        const updateTransform = (splat: Splat) => {\n            const splatIndex = this._splatIndices.get(splat) as number;\n            this._transforms.set(splat.transform.buffer, splatIndex * 20);\n            this._transforms[splatIndex * 20 + 16] = splat.selected ? 1 : 0;\n            splat.positionChanged = false;\n            splat.rotationChanged = false;\n            splat.scaleChanged = false;\n            splat.selectedChanged = false;\n            this.transformsChanged = true;\n        };\n\n        const updateColorTransforms = () => {\n            let colorTransformsChanged = false;\n            for (const splat of this._splatIndices.keys()) {\n                if (splat.colorTransformChanged) {\n                    colorTransformsChanged = true;\n                    break;\n                }\n            }\n            if (!colorTransformsChanged) {\n                return;\n            }\n            const colorTransformsMap: Matrix4[] = [new Matrix4()];\n            this._colorTransformIndices.fill(0);\n            let i = 1;\n            for (const splat of this._splatIndices.keys()) {\n                const offset = this._offsets.get(splat) as number;\n                for (const colorTransform of splat.colorTransforms) {\n                    if (!colorTransformsMap.includes(colorTransform)) {\n                        colorTransformsMap.push(colorTransform);\n                        i++;\n                    }\n                }\n                for (const index of splat.colorTransformsMap.keys()) {\n                    const colorTransformIndex = splat.colorTransformsMap.get(index) as number;\n                    this._colorTransformIndices[index + offset] = colorTransformIndex + i - 1;\n                }\n                splat.colorTransformChanged = false;\n            }\n            for (let index = 0; index < colorTransformsMap.length; index++) {\n                const colorTransform = colorTransformsMap[index];\n                this._colorTransforms.set(colorTransform.buffer, index * 16);\n            }\n            this.colorTransformsChanged = true;\n        };\n\n        this._worker.onmessage = (e) => {\n            if (e.data.response) {\n                const response = e.data.response;\n                const splat = lookup.get(response.offset) as Splat;\n                updateTransform(splat);\n                updateColorTransforms();\n\n                const splatIndex = this._splatIndices.get(splat) as number;\n                for (let i = 0; i < splat.data.vertexCount; i++) {\n                    this._transformIndices[response.offset + i] = splatIndex;\n                }\n\n                this._data.set(response.data, response.offset * 8);\n                splat.data.reattach(\n                    response.positions,\n                    response.rotations,\n                    response.scales,\n                    response.colors,\n                    response.selection,\n                );\n\n                this._positions.set(response.worldPositions, response.offset * 3);\n                this._rotations.set(response.worldRotations, response.offset * 4);\n                this._scales.set(response.worldScales, response.offset * 3);\n\n                this._updating.delete(splat);\n\n                splat.selectedChanged = false;\n\n                this.dataChanged = true;\n            }\n        };\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let wasmModule: any;\n\n        async function initWasm() {\n            wasmModule = await loadWasm();\n        }\n\n        initWasm();\n\n        async function waitForWasm() {\n            while (!wasmModule) {\n                await new Promise((resolve) => setTimeout(resolve, 0));\n            }\n        }\n\n        const buildImmediate = (splat: Splat) => {\n            if (!wasmModule) {\n                waitForWasm().then(() => {\n                    buildImmediate(splat);\n                });\n                return;\n            }\n\n            updateTransform(splat);\n\n            const positionsPtr = wasmModule._malloc(3 * splat.data.vertexCount * 4);\n            const rotationsPtr = wasmModule._malloc(4 * splat.data.vertexCount * 4);\n            const scalesPtr = wasmModule._malloc(3 * splat.data.vertexCount * 4);\n            const colorsPtr = wasmModule._malloc(4 * splat.data.vertexCount);\n            const selectionPtr = wasmModule._malloc(splat.data.vertexCount);\n            const dataPtr = wasmModule._malloc(8 * splat.data.vertexCount * 4);\n            const worldPositionsPtr = wasmModule._malloc(3 * splat.data.vertexCount * 4);\n            const worldRotationsPtr = wasmModule._malloc(4 * splat.data.vertexCount * 4);\n            const worldScalesPtr = wasmModule._malloc(3 * splat.data.vertexCount * 4);\n\n            wasmModule.HEAPF32.set(splat.data.positions, positionsPtr / 4);\n            wasmModule.HEAPF32.set(splat.data.rotations, rotationsPtr / 4);\n            wasmModule.HEAPF32.set(splat.data.scales, scalesPtr / 4);\n            wasmModule.HEAPU8.set(splat.data.colors, colorsPtr);\n            wasmModule.HEAPU8.set(splat.data.selection, selectionPtr);\n\n            wasmModule._pack(\n                splat.selected,\n                splat.data.vertexCount,\n                positionsPtr,\n                rotationsPtr,\n                scalesPtr,\n                colorsPtr,\n                selectionPtr,\n                dataPtr,\n                worldPositionsPtr,\n                worldRotationsPtr,\n                worldScalesPtr,\n            );\n\n            const outData = new Uint32Array(wasmModule.HEAPU32.buffer, dataPtr, splat.data.vertexCount * 8);\n            const worldPositions = new Float32Array(\n                wasmModule.HEAPF32.buffer,\n                worldPositionsPtr,\n                splat.data.vertexCount * 3,\n            );\n            const worldRotations = new Float32Array(\n                wasmModule.HEAPF32.buffer,\n                worldRotationsPtr,\n                splat.data.vertexCount * 4,\n            );\n            const worldScales = new Float32Array(wasmModule.HEAPF32.buffer, worldScalesPtr, splat.data.vertexCount * 3);\n\n            const splatIndex = this._splatIndices.get(splat) as number;\n            const offset = this._offsets.get(splat) as number;\n            for (let i = 0; i < splat.data.vertexCount; i++) {\n                this._transformIndices[offset + i] = splatIndex;\n            }\n            this._data.set(outData, offset * 8);\n            this._positions.set(worldPositions, offset * 3);\n            this._rotations.set(worldRotations, offset * 4);\n            this._scales.set(worldScales, offset * 3);\n\n            wasmModule._free(positionsPtr);\n            wasmModule._free(rotationsPtr);\n            wasmModule._free(scalesPtr);\n            wasmModule._free(colorsPtr);\n            wasmModule._free(selectionPtr);\n            wasmModule._free(dataPtr);\n            wasmModule._free(worldPositionsPtr);\n            wasmModule._free(worldRotationsPtr);\n            wasmModule._free(worldScalesPtr);\n\n            this.dataChanged = true;\n            this.colorTransformsChanged = true;\n        };\n\n        const build = (splat: Splat) => {\n            if (splat.positionChanged || splat.rotationChanged || splat.scaleChanged || splat.selectedChanged) {\n                updateTransform(splat);\n            }\n\n            if (splat.colorTransformChanged) {\n                updateColorTransforms();\n            }\n\n            if (!splat.data.changed || splat.data.detached) return;\n\n            const serializedSplat = {\n                position: new Float32Array(splat.position.flat()),\n                rotation: new Float32Array(splat.rotation.flat()),\n                scale: new Float32Array(splat.scale.flat()),\n                selected: splat.selected,\n                vertexCount: splat.data.vertexCount,\n                positions: splat.data.positions,\n                rotations: splat.data.rotations,\n                scales: splat.data.scales,\n                colors: splat.data.colors,\n                selection: splat.data.selection,\n                offset: this._offsets.get(splat) as number,\n            };\n\n            this._worker.postMessage(\n                {\n                    splat: serializedSplat,\n                },\n                [\n                    serializedSplat.position.buffer,\n                    serializedSplat.rotation.buffer,\n                    serializedSplat.scale.buffer,\n                    serializedSplat.positions.buffer,\n                    serializedSplat.rotations.buffer,\n                    serializedSplat.scales.buffer,\n                    serializedSplat.colors.buffer,\n                    serializedSplat.selection.buffer,\n                ],\n            );\n\n            this._updating.add(splat);\n\n            splat.data.detached = true;\n        };\n\n        this.getSplat = (index: number) => {\n            let splat = null;\n            for (const [key, value] of this._offsets) {\n                if (index >= value) {\n                    splat = key;\n                } else {\n                    break;\n                }\n            }\n            return splat;\n        };\n\n        this.getLocalIndex = (splat: Splat, index: number) => {\n            const offset = this._offsets.get(splat) as number;\n            return index - offset;\n        };\n\n        this.markDirty = (splat: Splat) => {\n            this._dirty.add(splat);\n        };\n\n        this.rebuild = () => {\n            for (const splat of this._dirty) {\n                build(splat);\n            }\n\n            this._dirty.clear();\n        };\n\n        this.dispose = () => {\n            this._worker.terminate();\n        };\n\n        for (const splat of this._splatIndices.keys()) {\n            buildImmediate(splat);\n        }\n\n        updateColorTransforms();\n    }\n\n    get offsets() {\n        return this._offsets;\n    }\n\n    get data() {\n        return this._data;\n    }\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get transforms() {\n        return this._transforms;\n    }\n\n    get transformsWidth() {\n        return this._transformsWidth;\n    }\n\n    get transformsHeight() {\n        return this._transformsHeight;\n    }\n\n    get transformIndices() {\n        return this._transformIndices;\n    }\n\n    get transformIndicesWidth() {\n        return this._transformIndicesWidth;\n    }\n\n    get transformIndicesHeight() {\n        return this._transformIndicesHeight;\n    }\n\n    get colorTransforms() {\n        return this._colorTransforms;\n    }\n\n    get colorTransformsWidth() {\n        return this._colorTransformsWidth;\n    }\n\n    get colorTransformsHeight() {\n        return this._colorTransformsHeight;\n    }\n\n    get colorTransformIndices() {\n        return this._colorTransformIndices;\n    }\n\n    get colorTransformIndicesWidth() {\n        return this._colorTransformIndicesWidth;\n    }\n\n    get colorTransformIndicesHeight() {\n        return this._colorTransformIndicesHeight;\n    }\n\n    get positions() {\n        return this._positions;\n    }\n\n    get rotations() {\n        return this._rotations;\n    }\n\n    get scales() {\n        return this._scales;\n    }\n\n    get vertexCount() {\n        return this._vertexCount;\n    }\n\n    get needsRebuild() {\n        return this._dirty.size > 0;\n    }\n\n    get updating() {\n        return this._updating.size > 0;\n    }\n}\n\nexport { RenderData };\n","class Color32 {\n    public readonly r: number;\n    public readonly g: number;\n    public readonly b: number;\n    public readonly a: number;\n\n    constructor(r: number = 0, g: number = 0, b: number = 0, a: number = 255) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n    flat(): number[] {\n        return [this.r, this.g, this.b, this.a];\n    }\n\n    flatNorm(): number[] {\n        return [this.r / 255, this.g / 255, this.b / 255, this.a / 255];\n    }\n\n    toHexString(): string {\n        return (\n            \"#\" +\n            this.flat()\n                .map((x) => x.toString(16).padStart(2, \"0\"))\n                .join(\"\")\n        );\n    }\n\n    toString(): string {\n        return `[${this.flat().join(\", \")}]`;\n    }\n}\n\nexport { Color32 };\n","import SortWorker from \"web-worker:../utils/SortWorker.ts\";\n\nimport { ShaderProgram } from \"./ShaderProgram\";\nimport { ShaderPass } from \"../passes/ShaderPass\";\nimport { RenderData } from \"../utils/RenderData\";\nimport { Color32 } from \"../../../math/Color32\";\nimport { ObjectAddedEvent, ObjectChangedEvent, ObjectRemovedEvent } from \"../../../events/Events\";\nimport { Splat } from \"../../../splats/Splat\";\nimport { WebGLRenderer } from \"../../WebGLRenderer\";\n\nconst vertexShaderSource = /* glsl */ `#version 300 es\nprecision highp float;\nprecision highp int;\n\nuniform highp usampler2D u_texture;\nuniform highp sampler2D u_transforms;\nuniform highp usampler2D u_transformIndices;\nuniform highp sampler2D u_colorTransforms;\nuniform highp usampler2D u_colorTransformIndices;\nuniform mat4 projection, view;\nuniform vec2 focal;\nuniform vec2 viewport;\n\nuniform bool useDepthFade;\nuniform float depthFade;\n\nin vec2 position;\nin int index;\n\nout vec4 vColor;\nout vec2 vPosition;\nout float vSize;\nout float vSelected;\n\nvoid main () {\n    uvec4 cen = texelFetch(u_texture, ivec2((uint(index) & 0x3ffu) << 1, uint(index) >> 10), 0);\n    float selected = float((cen.w >> 24) & 0xffu);\n\n    uint transformIndex = texelFetch(u_transformIndices, ivec2(uint(index) & 0x3ffu, uint(index) >> 10), 0).x;\n    mat4 transform = mat4(\n        texelFetch(u_transforms, ivec2(0, transformIndex), 0),\n        texelFetch(u_transforms, ivec2(1, transformIndex), 0),\n        texelFetch(u_transforms, ivec2(2, transformIndex), 0),\n        texelFetch(u_transforms, ivec2(3, transformIndex), 0)\n    );\n\n    if (selected < 0.5) {\n        selected = texelFetch(u_transforms, ivec2(4, transformIndex), 0).x;\n    }\n\n    mat4 viewTransform = view * transform;\n\n    vec4 cam = viewTransform * vec4(uintBitsToFloat(cen.xyz), 1);\n    vec4 pos2d = projection * cam;\n\n    float clip = 1.2 * pos2d.w;\n    if (pos2d.z < -pos2d.w || pos2d.z > pos2d.w || pos2d.x < -clip || pos2d.x > clip || pos2d.y < -clip || pos2d.y > clip) {\n        gl_Position = vec4(0.0, 0.0, 2.0, 1.0);\n        return;\n    }\n\n    uvec4 cov = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 1) | 1u, uint(index) >> 10), 0);\n    vec2 u1 = unpackHalf2x16(cov.x), u2 = unpackHalf2x16(cov.y), u3 = unpackHalf2x16(cov.z);\n    mat3 Vrk = mat3(u1.x, u1.y, u2.x, u1.y, u2.y, u3.x, u2.x, u3.x, u3.y);\n\n    mat3 J = mat3(\n        focal.x / cam.z, 0., -(focal.x * cam.x) / (cam.z * cam.z), \n        0., -focal.y / cam.z, (focal.y * cam.y) / (cam.z * cam.z), \n        0., 0., 0.\n    );\n\n    mat3 T = transpose(mat3(viewTransform)) * J;\n    mat3 cov2d = transpose(T) * Vrk * T;\n\n    //ref: https://github.com/graphdeco-inria/diff-gaussian-rasterization/blob/main/cuda_rasterizer/forward.cu#L110-L111\n    cov2d[0][0] += 0.3;\n    cov2d[1][1] += 0.3;\n\n    float mid = (cov2d[0][0] + cov2d[1][1]) / 2.0;\n    float radius = length(vec2((cov2d[0][0] - cov2d[1][1]) / 2.0, cov2d[0][1]));\n    float lambda1 = mid + radius, lambda2 = mid - radius;\n\n    if (lambda2 < 0.0) return;\n    vec2 diagonalVector = normalize(vec2(cov2d[0][1], lambda1 - cov2d[0][0]));\n    vec2 majorAxis = min(sqrt(2.0 * lambda1), 1024.0) * diagonalVector;\n    vec2 minorAxis = min(sqrt(2.0 * lambda2), 1024.0) * vec2(diagonalVector.y, -diagonalVector.x);\n\n    uint colorTransformIndex = texelFetch(u_colorTransformIndices, ivec2(uint(index) & 0x3ffu, uint(index) >> 10), 0).x;\n    mat4 colorTransform = mat4(\n        texelFetch(u_colorTransforms, ivec2(0, colorTransformIndex), 0),\n        texelFetch(u_colorTransforms, ivec2(1, colorTransformIndex), 0),\n        texelFetch(u_colorTransforms, ivec2(2, colorTransformIndex), 0),\n        texelFetch(u_colorTransforms, ivec2(3, colorTransformIndex), 0)\n    );\n\n    vec4 color = vec4((cov.w) & 0xffu, (cov.w >> 8) & 0xffu, (cov.w >> 16) & 0xffu, (cov.w >> 24) & 0xffu) / 255.0;\n    vColor = colorTransform * color;\n\n    vPosition = position;\n    vSize = length(majorAxis);\n    vSelected = selected;\n\n    float scalingFactor = 1.0;\n\n    if (useDepthFade) {\n        float depthNorm = (pos2d.z / pos2d.w + 1.0) / 2.0;\n        float near = 0.1; float far = 100.0;\n        float normalizedDepth = (2.0 * near) / (far + near - depthNorm * (far - near));\n        float start = max(normalizedDepth - 0.1, 0.0);\n        float end = min(normalizedDepth + 0.1, 1.0);\n        scalingFactor = clamp((depthFade - start) / (end - start), 0.0, 1.0);\n    }\n\n    vec2 vCenter = vec2(pos2d) / pos2d.w;\n    gl_Position = vec4(\n        vCenter \n        + position.x * majorAxis * scalingFactor / viewport\n        + position.y * minorAxis * scalingFactor / viewport, 0.0, 1.0);\n}\n`;\n\nconst fragmentShaderSource = /* glsl */ `#version 300 es\nprecision highp float;\n\nuniform float outlineThickness;\nuniform vec4 outlineColor;\n\nin vec4 vColor;\nin vec2 vPosition;\nin float vSize;\nin float vSelected;\n\nout vec4 fragColor;\n\nvoid main () {\n    float A = -dot(vPosition, vPosition);\n\n    if (A < -4.0) discard;\n\n    if (vSelected < 0.5) {\n        float B = exp(A) * vColor.a;\n        fragColor = vec4(B * vColor.rgb, B);\n        return;\n    }\n\n    float outlineThreshold = -4.0 + (outlineThickness / vSize);\n\n    if (A < outlineThreshold) {\n        fragColor = outlineColor;\n    } \n    else {\n        float B = exp(A) * vColor.a;\n        fragColor = vec4(B * vColor.rgb, B);\n    }\n}\n`;\n\nclass RenderProgram extends ShaderProgram {\n    private _outlineThickness: number = 10.0;\n    private _outlineColor: Color32 = new Color32(255, 165, 0, 255);\n    private _renderData: RenderData | null = null;\n    private _depthIndex: Uint32Array = new Uint32Array();\n    private _splatTexture: WebGLTexture | null = null;\n    private _worker: Worker | null = null;\n\n    protected _initialize: () => void;\n    protected _resize: () => void;\n    protected _render: () => void;\n    protected _dispose: () => void;\n\n    private _setOutlineThickness: (value: number) => void;\n    private _setOutlineColor: (value: Color32) => void;\n\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[]) {\n        super(renderer, passes);\n\n        const canvas = renderer.canvas;\n        const gl = renderer.gl;\n\n        let u_projection: WebGLUniformLocation;\n        let u_viewport: WebGLUniformLocation;\n        let u_focal: WebGLUniformLocation;\n        let u_view: WebGLUniformLocation;\n        let u_texture: WebGLUniformLocation;\n        let u_transforms: WebGLUniformLocation;\n        let u_transformIndices: WebGLUniformLocation;\n        let u_colorTransforms: WebGLUniformLocation;\n        let u_colorTransformIndices: WebGLUniformLocation;\n\n        let u_outlineThickness: WebGLUniformLocation;\n        let u_outlineColor: WebGLUniformLocation;\n\n        let positionAttribute: number;\n        let indexAttribute: number;\n\n        let transformsTexture: WebGLTexture;\n        let transformIndicesTexture: WebGLTexture;\n\n        let colorTransformsTexture: WebGLTexture;\n        let colorTransformIndicesTexture: WebGLTexture;\n\n        let vertexBuffer: WebGLBuffer;\n        let indexBuffer: WebGLBuffer;\n\n        this._resize = () => {\n            if (!this._camera) return;\n\n            this._camera.data.setSize(canvas.width, canvas.height);\n            this._camera.update();\n\n            u_projection = gl.getUniformLocation(this.program, \"projection\") as WebGLUniformLocation;\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n\n            u_viewport = gl.getUniformLocation(this.program, \"viewport\") as WebGLUniformLocation;\n            gl.uniform2fv(u_viewport, new Float32Array([canvas.width, canvas.height]));\n        };\n\n        const createWorker = () => {\n            this._worker = new SortWorker();\n            this._worker.onmessage = (e) => {\n                if (e.data.depthIndex) {\n                    const { depthIndex } = e.data;\n                    this._depthIndex = depthIndex;\n                    gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n                    gl.bufferData(gl.ARRAY_BUFFER, depthIndex, gl.STATIC_DRAW);\n                }\n            };\n        };\n\n        this._initialize = () => {\n            if (!this._scene || !this._camera) {\n                console.error(\"Cannot render without scene and camera\");\n                return;\n            }\n\n            this._resize();\n\n            this._scene.addEventListener(\"objectAdded\", handleObjectAdded);\n            this._scene.addEventListener(\"objectRemoved\", handleObjectRemoved);\n            for (const object of this._scene.objects) {\n                if (object instanceof Splat) {\n                    object.addEventListener(\"objectChanged\", handleObjectChanged);\n                }\n            }\n\n            this._renderData = new RenderData(this._scene);\n\n            u_focal = gl.getUniformLocation(this.program, \"focal\") as WebGLUniformLocation;\n            gl.uniform2fv(u_focal, new Float32Array([this._camera.data.fx, this._camera.data.fy]));\n\n            u_view = gl.getUniformLocation(this.program, \"view\") as WebGLUniformLocation;\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n\n            u_outlineThickness = gl.getUniformLocation(this.program, \"outlineThickness\") as WebGLUniformLocation;\n            gl.uniform1f(u_outlineThickness, this.outlineThickness);\n\n            u_outlineColor = gl.getUniformLocation(this.program, \"outlineColor\") as WebGLUniformLocation;\n            gl.uniform4fv(u_outlineColor, new Float32Array(this.outlineColor.flatNorm()));\n\n            this._splatTexture = gl.createTexture() as WebGLTexture;\n            u_texture = gl.getUniformLocation(this.program, \"u_texture\") as WebGLUniformLocation;\n            gl.uniform1i(u_texture, 0);\n\n            transformsTexture = gl.createTexture() as WebGLTexture;\n            u_transforms = gl.getUniformLocation(this.program, \"u_transforms\") as WebGLUniformLocation;\n            gl.uniform1i(u_transforms, 1);\n\n            transformIndicesTexture = gl.createTexture() as WebGLTexture;\n            u_transformIndices = gl.getUniformLocation(this.program, \"u_transformIndices\") as WebGLUniformLocation;\n            gl.uniform1i(u_transformIndices, 2);\n\n            colorTransformsTexture = gl.createTexture() as WebGLTexture;\n            u_colorTransforms = gl.getUniformLocation(this.program, \"u_colorTransforms\") as WebGLUniformLocation;\n            gl.uniform1i(u_colorTransforms, 3);\n\n            colorTransformIndicesTexture = gl.createTexture() as WebGLTexture;\n            u_colorTransformIndices = gl.getUniformLocation(\n                this.program,\n                \"u_colorTransformIndices\",\n            ) as WebGLUniformLocation;\n            gl.uniform1i(u_colorTransformIndices, 4);\n\n            vertexBuffer = gl.createBuffer() as WebGLBuffer;\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-2, -2, 2, -2, 2, 2, -2, 2]), gl.STATIC_DRAW);\n\n            positionAttribute = gl.getAttribLocation(this.program, \"position\");\n            gl.enableVertexAttribArray(positionAttribute);\n            gl.vertexAttribPointer(positionAttribute, 2, gl.FLOAT, false, 0, 0);\n\n            indexBuffer = gl.createBuffer() as WebGLBuffer;\n            indexAttribute = gl.getAttribLocation(this.program, \"index\");\n            gl.enableVertexAttribArray(indexAttribute);\n            gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n\n            createWorker();\n        };\n\n        const handleObjectAdded = (event: Event) => {\n            const e = event as ObjectAddedEvent;\n\n            if (e.object instanceof Splat) {\n                e.object.addEventListener(\"objectChanged\", handleObjectChanged);\n            }\n\n            this.dispose();\n        };\n\n        const handleObjectRemoved = (event: Event) => {\n            const e = event as ObjectRemovedEvent;\n\n            if (e.object instanceof Splat) {\n                e.object.removeEventListener(\"objectChanged\", handleObjectChanged);\n            }\n\n            this.dispose();\n        };\n\n        const handleObjectChanged = (event: Event) => {\n            const e = event as ObjectChangedEvent;\n\n            if (e.object instanceof Splat && this._renderData) {\n                this._renderData.markDirty(e.object);\n            }\n        };\n\n        this._render = () => {\n            if (!this._scene || !this._camera || !this.renderData) {\n                console.error(\"Cannot render without scene and camera\");\n                return;\n            }\n\n            if (this.renderData.needsRebuild) {\n                this.renderData.rebuild();\n            }\n\n            if (\n                this.renderData.dataChanged ||\n                this.renderData.transformsChanged ||\n                this.renderData.colorTransformsChanged\n            ) {\n                if (this.renderData.dataChanged) {\n                    gl.activeTexture(gl.TEXTURE0);\n                    gl.bindTexture(gl.TEXTURE_2D, this.splatTexture);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                    gl.texImage2D(\n                        gl.TEXTURE_2D,\n                        0,\n                        gl.RGBA32UI,\n                        this.renderData.width,\n                        this.renderData.height,\n                        0,\n                        gl.RGBA_INTEGER,\n                        gl.UNSIGNED_INT,\n                        this.renderData.data,\n                    );\n                }\n\n                if (this.renderData.transformsChanged) {\n                    gl.activeTexture(gl.TEXTURE1);\n                    gl.bindTexture(gl.TEXTURE_2D, transformsTexture);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                    gl.texImage2D(\n                        gl.TEXTURE_2D,\n                        0,\n                        gl.RGBA32F,\n                        this.renderData.transformsWidth,\n                        this.renderData.transformsHeight,\n                        0,\n                        gl.RGBA,\n                        gl.FLOAT,\n                        this.renderData.transforms,\n                    );\n\n                    gl.activeTexture(gl.TEXTURE2);\n                    gl.bindTexture(gl.TEXTURE_2D, transformIndicesTexture);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                    gl.texImage2D(\n                        gl.TEXTURE_2D,\n                        0,\n                        gl.R32UI,\n                        this.renderData.transformIndicesWidth,\n                        this.renderData.transformIndicesHeight,\n                        0,\n                        gl.RED_INTEGER,\n                        gl.UNSIGNED_INT,\n                        this.renderData.transformIndices,\n                    );\n                }\n\n                if (this.renderData.colorTransformsChanged) {\n                    gl.activeTexture(gl.TEXTURE3);\n                    gl.bindTexture(gl.TEXTURE_2D, colorTransformsTexture);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                    gl.texImage2D(\n                        gl.TEXTURE_2D,\n                        0,\n                        gl.RGBA32F,\n                        this.renderData.colorTransformsWidth,\n                        this.renderData.colorTransformsHeight,\n                        0,\n                        gl.RGBA,\n                        gl.FLOAT,\n                        this.renderData.colorTransforms,\n                    );\n\n                    gl.activeTexture(gl.TEXTURE4);\n                    gl.bindTexture(gl.TEXTURE_2D, colorTransformIndicesTexture);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                    gl.texImage2D(\n                        gl.TEXTURE_2D,\n                        0,\n                        gl.R32UI,\n                        this.renderData.colorTransformIndicesWidth,\n                        this.renderData.colorTransformIndicesHeight,\n                        0,\n                        gl.RED_INTEGER,\n                        gl.UNSIGNED_INT,\n                        this.renderData.colorTransformIndices,\n                    );\n                }\n\n                const detachedPositions = new Float32Array(this.renderData.positions.slice().buffer);\n                const detachedTransforms = new Float32Array(this.renderData.transforms.slice().buffer);\n                const detachedTransformIndices = new Uint32Array(this.renderData.transformIndices.slice().buffer);\n                this._worker?.postMessage(\n                    {\n                        sortData: {\n                            positions: detachedPositions,\n                            transforms: detachedTransforms,\n                            transformIndices: detachedTransformIndices,\n                            vertexCount: this.renderData.vertexCount,\n                        },\n                    },\n                    [detachedPositions.buffer, detachedTransforms.buffer, detachedTransformIndices.buffer],\n                );\n\n                this.renderData.dataChanged = false;\n                this.renderData.transformsChanged = false;\n                this.renderData.colorTransformsChanged = false;\n            }\n\n            this._camera.update();\n            this._worker?.postMessage({ viewProj: this._camera.data.viewProj.buffer });\n\n            gl.viewport(0, 0, canvas.width, canvas.height);\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n\n            gl.disable(gl.DEPTH_TEST);\n            gl.enable(gl.BLEND);\n            gl.blendFuncSeparate(gl.ONE_MINUS_DST_ALPHA, gl.ONE, gl.ONE_MINUS_DST_ALPHA, gl.ONE);\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.vertexAttribPointer(positionAttribute, 2, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, this.depthIndex, gl.STATIC_DRAW);\n            gl.vertexAttribIPointer(indexAttribute, 1, gl.INT, 0, 0);\n            gl.vertexAttribDivisor(indexAttribute, 1);\n\n            gl.drawArraysInstanced(gl.TRIANGLE_FAN, 0, 4, this.renderData.vertexCount);\n        };\n\n        this._dispose = () => {\n            if (!this._scene || !this._camera || !this.renderData) {\n                console.error(\"Cannot dispose without scene and camera\");\n                return;\n            }\n\n            this._scene.removeEventListener(\"objectAdded\", handleObjectAdded);\n            this._scene.removeEventListener(\"objectRemoved\", handleObjectRemoved);\n            for (const object of this._scene.objects) {\n                if (object instanceof Splat) {\n                    object.removeEventListener(\"objectChanged\", handleObjectChanged);\n                }\n            }\n\n            this._worker?.terminate();\n            this.renderData.dispose();\n\n            gl.deleteTexture(this.splatTexture);\n            gl.deleteTexture(transformsTexture);\n            gl.deleteTexture(transformIndicesTexture);\n\n            gl.deleteBuffer(indexBuffer);\n            gl.deleteBuffer(vertexBuffer);\n        };\n\n        this._setOutlineThickness = (value: number) => {\n            this._outlineThickness = value;\n            if (this._initialized) {\n                gl.uniform1f(u_outlineThickness, value);\n            }\n        };\n\n        this._setOutlineColor = (value: Color32) => {\n            this._outlineColor = value;\n            if (this._initialized) {\n                gl.uniform4fv(u_outlineColor, new Float32Array(value.flatNorm()));\n            }\n        };\n    }\n\n    get renderData() {\n        return this._renderData;\n    }\n\n    get depthIndex() {\n        return this._depthIndex;\n    }\n\n    get splatTexture() {\n        return this._splatTexture;\n    }\n\n    get outlineThickness() {\n        return this._outlineThickness;\n    }\n\n    set outlineThickness(value: number) {\n        this._setOutlineThickness(value);\n    }\n\n    get outlineColor() {\n        return this._outlineColor;\n    }\n\n    set outlineColor(value: Color32) {\n        this._setOutlineColor(value);\n    }\n\n    get worker() {\n        return this._worker;\n    }\n\n    protected _getVertexSource() {\n        return vertexShaderSource;\n    }\n\n    protected _getFragmentSource() {\n        return fragmentShaderSource;\n    }\n}\n\nexport { RenderProgram };\n","import { RenderProgram } from \"../programs/RenderProgram\";\nimport { ShaderProgram } from \"../programs/ShaderProgram\";\nimport { ShaderPass } from \"./ShaderPass\";\n\nclass FadeInPass implements ShaderPass {\n    initialize: (program: ShaderProgram) => void;\n    render: () => void;\n\n    constructor(speed: number = 1.0) {\n        let value = 0.0;\n        let active = false;\n\n        let renderProgram: RenderProgram;\n        let gl: WebGL2RenderingContext;\n        let u_useDepthFade: WebGLUniformLocation;\n        let u_depthFade: WebGLUniformLocation;\n\n        this.initialize = (program: ShaderProgram) => {\n            if (!(program instanceof RenderProgram)) {\n                throw new Error(\"FadeInPass requires a RenderProgram\");\n            }\n\n            value = program.started ? 1.0 : 0.0;\n            active = true;\n            renderProgram = program;\n            gl = program.renderer.gl;\n\n            u_useDepthFade = gl.getUniformLocation(renderProgram.program, \"useDepthFade\") as WebGLUniformLocation;\n            gl.uniform1i(u_useDepthFade, 1);\n\n            u_depthFade = gl.getUniformLocation(renderProgram.program, \"depthFade\") as WebGLUniformLocation;\n            gl.uniform1f(u_depthFade, value);\n        };\n\n        this.render = () => {\n            if (!active || renderProgram.renderData?.updating) return;\n            gl.useProgram(renderProgram.program);\n            value = Math.min(value + speed * 0.01, 1.0);\n            if (value >= 1.0) {\n                active = false;\n                gl.uniform1i(u_useDepthFade, 0);\n            }\n            gl.uniform1f(u_depthFade, value);\n        };\n    }\n\n    dispose() {}\n}\n\nexport { FadeInPass };\n","import type { Scene } from \"../core/Scene\";\nimport { FadeInPass } from \"./webgl/passes/FadeInPass\";\nimport { Camera } from \"../cameras/Camera\";\nimport { Color32 } from \"../math/Color32\";\nimport { ShaderProgram } from \"./webgl/programs/ShaderProgram\";\nimport { RenderProgram } from \"./webgl/programs/RenderProgram\";\nimport { ShaderPass } from \"./webgl/passes/ShaderPass\";\n\nexport class WebGLRenderer {\n    private _canvas: HTMLCanvasElement;\n    private _gl: WebGL2RenderingContext;\n    private _backgroundColor: Color32 = new Color32();\n    private _renderProgram: RenderProgram;\n\n    addProgram: (program: ShaderProgram) => void;\n    removeProgram: (program: ShaderProgram) => void;\n    resize: () => void;\n    setSize: (width: number, height: number) => void;\n    render: (scene: Scene, camera: Camera) => void;\n    dispose: () => void;\n\n    constructor(optionalCanvas: HTMLCanvasElement | null = null, optionalRenderPasses: ShaderPass[] | null = null) {\n        const canvas: HTMLCanvasElement = optionalCanvas || document.createElement(\"canvas\");\n        if (!optionalCanvas) {\n            canvas.style.display = \"block\";\n            canvas.style.boxSizing = \"border-box\";\n            canvas.style.width = \"100%\";\n            canvas.style.height = \"100%\";\n            canvas.style.margin = \"0\";\n            canvas.style.padding = \"0\";\n            document.body.appendChild(canvas);\n        }\n        canvas.style.background = this._backgroundColor.toHexString();\n        this._canvas = canvas;\n\n        this._gl = canvas.getContext(\"webgl2\", { antialias: false }) as WebGL2RenderingContext;\n\n        const renderPasses = optionalRenderPasses || [];\n        if (!optionalRenderPasses) {\n            renderPasses.push(new FadeInPass());\n        }\n\n        this._renderProgram = new RenderProgram(this, renderPasses);\n        const programs = [this._renderProgram] as ShaderProgram[];\n\n        this.resize = () => {\n            const width = canvas.clientWidth;\n            const height = canvas.clientHeight;\n            if (canvas.width !== width || canvas.height !== height) {\n                this.setSize(width, height);\n            }\n        };\n\n        this.setSize = (width: number, height: number) => {\n            canvas.width = width;\n            canvas.height = height;\n            this._gl.viewport(0, 0, canvas.width, canvas.height);\n            for (const program of programs) {\n                program.resize();\n            }\n        };\n\n        this.render = (scene: Scene, camera: Camera) => {\n            for (const program of programs) {\n                program.render(scene, camera);\n            }\n        };\n\n        this.dispose = () => {\n            for (const program of programs) {\n                program.dispose();\n            }\n        };\n\n        this.addProgram = (program: ShaderProgram) => {\n            programs.push(program);\n        };\n\n        this.removeProgram = (program: ShaderProgram) => {\n            const index = programs.indexOf(program);\n            if (index < 0) {\n                throw new Error(\"Program not found\");\n            }\n            programs.splice(index, 1);\n        };\n\n        this.resize();\n    }\n\n    get canvas() {\n        return this._canvas;\n    }\n\n    get gl() {\n        return this._gl;\n    }\n\n    get renderProgram() {\n        return this._renderProgram;\n    }\n\n    get backgroundColor() {\n        return this._backgroundColor;\n    }\n\n    set backgroundColor(value: Color32) {\n        this._backgroundColor = value;\n        this._canvas.style.background = value.toHexString();\n    }\n}\n","import { Camera } from \"../cameras/Camera\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Vector3 } from \"../math/Vector3\";\n\nclass OrbitControls {\n    minAngle: number = -90;\n    maxAngle: number = 90;\n    minZoom: number = 0.1;\n    maxZoom: number = 30;\n    orbitSpeed: number = 1;\n    panSpeed: number = 1;\n    zoomSpeed: number = 1;\n    dampening: number = 0.12;\n    setCameraTarget: (newTarget: Vector3) => void = () => {};\n    update: () => void;\n    dispose: () => void;\n\n    constructor(\n        camera: Camera,\n        canvas: HTMLElement,\n        alpha: number = 0.5,\n        beta: number = 0.5,\n        radius: number = 5,\n        enableKeyboardControls: boolean = true,\n        inputTarget: Vector3 = new Vector3(),\n    ) {\n        let target = inputTarget.clone();\n\n        let desiredTarget = target.clone();\n        let desiredAlpha = alpha;\n        let desiredBeta = beta;\n        let desiredRadius = radius;\n\n        let dragging = false;\n        let panning = false;\n        let lastDist = 0;\n        let lastX = 0;\n        let lastY = 0;\n\n        const keys: { [key: string]: boolean } = {};\n\n        let isUpdatingCamera = false;\n\n        const onCameraChange = () => {\n            if (isUpdatingCamera) return;\n\n            const eulerRotation = camera.rotation.toEuler();\n            desiredAlpha = -eulerRotation.y;\n            desiredBeta = -eulerRotation.x;\n\n            const x = camera.position.x - desiredRadius * Math.sin(desiredAlpha) * Math.cos(desiredBeta);\n            const y = camera.position.y + desiredRadius * Math.sin(desiredBeta);\n            const z = camera.position.z + desiredRadius * Math.cos(desiredAlpha) * Math.cos(desiredBeta);\n\n            desiredTarget = new Vector3(x, y, z);\n        };\n\n        camera.addEventListener(\"objectChanged\", onCameraChange);\n\n        this.setCameraTarget = (newTarget: Vector3) => {\n            const dx = newTarget.x - camera.position.x;\n            const dy = newTarget.y - camera.position.y;\n            const dz = newTarget.z - camera.position.z;\n            desiredRadius = Math.sqrt(dx * dx + dy * dy + dz * dz);\n            desiredBeta = Math.atan2(dy, Math.sqrt(dx * dx + dz * dz));\n            desiredAlpha = -Math.atan2(dx, dz);\n            desiredTarget = new Vector3(newTarget.x, newTarget.y, newTarget.z);\n        };\n\n        const computeZoomNorm = () => {\n            return 0.1 + (0.9 * (desiredRadius - this.minZoom)) / (this.maxZoom - this.minZoom);\n        };\n\n        const onKeyDown = (e: KeyboardEvent) => {\n            keys[e.code] = true;\n            // Map arrow keys to WASD keys\n            if (e.code === \"ArrowUp\") keys[\"KeyW\"] = true;\n            if (e.code === \"ArrowDown\") keys[\"KeyS\"] = true;\n            if (e.code === \"ArrowLeft\") keys[\"KeyA\"] = true;\n            if (e.code === \"ArrowRight\") keys[\"KeyD\"] = true;\n        };\n\n        const onKeyUp = (e: KeyboardEvent) => {\n            keys[e.code] = false; // Map arrow keys to WASD keys\n            if (e.code === \"ArrowUp\") keys[\"KeyW\"] = false;\n            if (e.code === \"ArrowDown\") keys[\"KeyS\"] = false;\n            if (e.code === \"ArrowLeft\") keys[\"KeyA\"] = false;\n            if (e.code === \"ArrowRight\") keys[\"KeyD\"] = false;\n        };\n\n        const onMouseDown = (e: MouseEvent) => {\n            preventDefault(e);\n\n            dragging = true;\n            panning = e.button === 2;\n            lastX = e.clientX;\n            lastY = e.clientY;\n            window.addEventListener(\"mouseup\", onMouseUp);\n        };\n\n        const onMouseUp = (e: MouseEvent) => {\n            preventDefault(e);\n\n            dragging = false;\n            panning = false;\n            window.removeEventListener(\"mouseup\", onMouseUp);\n        };\n\n        const onMouseMove = (e: MouseEvent) => {\n            preventDefault(e);\n\n            if (!dragging || !camera) return;\n\n            const dx = e.clientX - lastX;\n            const dy = e.clientY - lastY;\n\n            if (panning) {\n                const zoomNorm = computeZoomNorm();\n                const panX = -dx * this.panSpeed * 0.01 * zoomNorm;\n                const panY = -dy * this.panSpeed * 0.01 * zoomNorm;\n                const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\n                const right = new Vector3(R[0], R[3], R[6]);\n                const up = new Vector3(R[1], R[4], R[7]);\n                desiredTarget = desiredTarget.add(right.multiply(panX));\n                desiredTarget = desiredTarget.add(up.multiply(panY));\n            } else {\n                desiredAlpha -= dx * this.orbitSpeed * 0.003;\n                desiredBeta += dy * this.orbitSpeed * 0.003;\n                desiredBeta = Math.min(\n                    Math.max(desiredBeta, (this.minAngle * Math.PI) / 180),\n                    (this.maxAngle * Math.PI) / 180,\n                );\n            }\n\n            lastX = e.clientX;\n            lastY = e.clientY;\n        };\n\n        const onWheel = (e: WheelEvent) => {\n            preventDefault(e);\n\n            const zoomNorm = computeZoomNorm();\n            desiredRadius += e.deltaY * this.zoomSpeed * 0.025 * zoomNorm;\n            desiredRadius = Math.min(Math.max(desiredRadius, this.minZoom), this.maxZoom);\n        };\n\n        const onTouchStart = (e: TouchEvent) => {\n            preventDefault(e);\n\n            if (e.touches.length === 1) {\n                dragging = true;\n                panning = false;\n                lastX = e.touches[0].clientX;\n                lastY = e.touches[0].clientY;\n                lastDist = 0;\n            } else if (e.touches.length === 2) {\n                dragging = true;\n                panning = true;\n                lastX = (e.touches[0].clientX + e.touches[1].clientX) / 2;\n                lastY = (e.touches[0].clientY + e.touches[1].clientY) / 2;\n                const distX = e.touches[0].clientX - e.touches[1].clientX;\n                const distY = e.touches[0].clientY - e.touches[1].clientY;\n                lastDist = Math.sqrt(distX * distX + distY * distY);\n            }\n        };\n\n        const onTouchEnd = (e: TouchEvent) => {\n            preventDefault(e);\n\n            dragging = false;\n            panning = false;\n        };\n\n        const onTouchMove = (e: TouchEvent) => {\n            preventDefault(e);\n\n            if (!dragging || !camera) return;\n\n            if (panning) {\n                const zoomNorm = computeZoomNorm();\n\n                const distX = e.touches[0].clientX - e.touches[1].clientX;\n                const distY = e.touches[0].clientY - e.touches[1].clientY;\n                const dist = Math.sqrt(distX * distX + distY * distY);\n                const delta = lastDist - dist;\n                desiredRadius += delta * this.zoomSpeed * 0.1 * zoomNorm;\n                desiredRadius = Math.min(Math.max(desiredRadius, this.minZoom), this.maxZoom);\n                lastDist = dist;\n\n                const touchX = (e.touches[0].clientX + e.touches[1].clientX) / 2;\n                const touchY = (e.touches[0].clientY + e.touches[1].clientY) / 2;\n                const dx = touchX - lastX;\n                const dy = touchY - lastY;\n                const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\n                const right = new Vector3(R[0], R[3], R[6]);\n                const up = new Vector3(R[1], R[4], R[7]);\n                desiredTarget = desiredTarget.add(right.multiply(-dx * this.panSpeed * 0.025 * zoomNorm));\n                desiredTarget = desiredTarget.add(up.multiply(-dy * this.panSpeed * 0.025 * zoomNorm));\n                lastX = touchX;\n                lastY = touchY;\n            } else {\n                const dx = e.touches[0].clientX - lastX;\n                const dy = e.touches[0].clientY - lastY;\n\n                desiredAlpha -= dx * this.orbitSpeed * 0.003;\n                desiredBeta += dy * this.orbitSpeed * 0.003;\n                desiredBeta = Math.min(\n                    Math.max(desiredBeta, (this.minAngle * Math.PI) / 180),\n                    (this.maxAngle * Math.PI) / 180,\n                );\n\n                lastX = e.touches[0].clientX;\n                lastY = e.touches[0].clientY;\n            }\n        };\n\n        const lerp = (a: number, b: number, t: number) => {\n            return (1 - t) * a + t * b;\n        };\n\n        this.update = () => {\n            isUpdatingCamera = true;\n\n            alpha = lerp(alpha, desiredAlpha, this.dampening);\n            beta = lerp(beta, desiredBeta, this.dampening);\n            radius = lerp(radius, desiredRadius, this.dampening);\n            target = target.lerp(desiredTarget, this.dampening);\n\n            const x = target.x + radius * Math.sin(alpha) * Math.cos(beta);\n            const y = target.y - radius * Math.sin(beta);\n            const z = target.z - radius * Math.cos(alpha) * Math.cos(beta);\n            camera.position = new Vector3(x, y, z);\n\n            const direction = target.subtract(camera.position).normalize();\n            const rx = Math.asin(-direction.y);\n            const ry = Math.atan2(direction.x, direction.z);\n            camera.rotation = Quaternion.FromEuler(new Vector3(rx, ry, 0));\n\n            const moveSpeed = 0.025;\n            const rotateSpeed = 0.01;\n\n            const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\n            const forward = new Vector3(-R[2], -R[5], -R[8]);\n            const right = new Vector3(R[0], R[3], R[6]);\n\n            if (keys[\"KeyS\"]) desiredTarget = desiredTarget.add(forward.multiply(moveSpeed));\n            if (keys[\"KeyW\"]) desiredTarget = desiredTarget.subtract(forward.multiply(moveSpeed));\n            if (keys[\"KeyA\"]) desiredTarget = desiredTarget.subtract(right.multiply(moveSpeed));\n            if (keys[\"KeyD\"]) desiredTarget = desiredTarget.add(right.multiply(moveSpeed));\n\n            // Add rotation with 'e' and 'q' for horizontal rotation\n            if (keys[\"KeyE\"]) desiredAlpha += rotateSpeed;\n            if (keys[\"KeyQ\"]) desiredAlpha -= rotateSpeed;\n\n            // Add rotation with 'r' and 'f' for vertical rotation\n            if (keys[\"KeyR\"]) desiredBeta += rotateSpeed;\n            if (keys[\"KeyF\"]) desiredBeta -= rotateSpeed;\n\n            isUpdatingCamera = false;\n        };\n\n        const preventDefault = (e: Event) => {\n            e.preventDefault();\n            e.stopPropagation();\n        };\n\n        this.dispose = () => {\n            canvas.removeEventListener(\"dragenter\", preventDefault);\n            canvas.removeEventListener(\"dragover\", preventDefault);\n            canvas.removeEventListener(\"dragleave\", preventDefault);\n            canvas.removeEventListener(\"contextmenu\", preventDefault);\n\n            canvas.removeEventListener(\"mousedown\", onMouseDown);\n            canvas.removeEventListener(\"mousemove\", onMouseMove);\n            canvas.removeEventListener(\"wheel\", onWheel);\n\n            canvas.removeEventListener(\"touchstart\", onTouchStart);\n            canvas.removeEventListener(\"touchend\", onTouchEnd);\n            canvas.removeEventListener(\"touchmove\", onTouchMove);\n\n            if (enableKeyboardControls) {\n                window.removeEventListener(\"keydown\", onKeyDown);\n                window.removeEventListener(\"keyup\", onKeyUp);\n            }\n        };\n\n        if (enableKeyboardControls) {\n            window.addEventListener(\"keydown\", onKeyDown);\n            window.addEventListener(\"keyup\", onKeyUp);\n        }\n\n        canvas.addEventListener(\"dragenter\", preventDefault);\n        canvas.addEventListener(\"dragover\", preventDefault);\n        canvas.addEventListener(\"dragleave\", preventDefault);\n        canvas.addEventListener(\"contextmenu\", preventDefault);\n\n        canvas.addEventListener(\"mousedown\", onMouseDown);\n        canvas.addEventListener(\"mousemove\", onMouseMove);\n        canvas.addEventListener(\"wheel\", onWheel);\n\n        canvas.addEventListener(\"touchstart\", onTouchStart);\n        canvas.addEventListener(\"touchend\", onTouchEnd);\n        canvas.addEventListener(\"touchmove\", onTouchMove);\n\n        this.update();\n    }\n}\n\nexport { OrbitControls };\n","import { Camera } from \"../cameras/Camera\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport { Vector3 } from \"../math/Vector3\";\n\nclass FPSControls {\n    moveSpeed: number = 1.5;\n    lookSpeed: number = 0.7;\n    dampening: number = 0.5;\n    update: () => void;\n    dispose: () => void;\n\n    constructor(camera: Camera, canvas: HTMLCanvasElement) {\n        const keys: { [key: string]: boolean } = {};\n        let pitch = camera.rotation.toEuler().x;\n        let yaw = camera.rotation.toEuler().y;\n        let targetPosition = camera.position;\n        let pointerLock = false;\n\n        const onMouseDown = () => {\n            canvas.requestPointerLock();\n        };\n\n        const onPointerLockChange = () => {\n            pointerLock = document.pointerLockElement === canvas;\n            if (pointerLock) {\n                canvas.addEventListener(\"mousemove\", onMouseMove);\n            } else {\n                canvas.removeEventListener(\"mousemove\", onMouseMove);\n            }\n        };\n\n        const onMouseMove = (e: MouseEvent) => {\n            const mouseX = e.movementX;\n            const mouseY = e.movementY;\n\n            yaw += mouseX * this.lookSpeed * 0.001;\n            pitch -= mouseY * this.lookSpeed * 0.001;\n            pitch = Math.max(-Math.PI / 2, Math.min(Math.PI / 2, pitch));\n        };\n\n        const onKeyDown = (e: KeyboardEvent) => {\n            keys[e.code] = true;\n            // Map arrow keys to WASD keys\n            if (e.code === \"ArrowUp\") keys[\"KeyW\"] = true;\n            if (e.code === \"ArrowDown\") keys[\"KeyS\"] = true;\n            if (e.code === \"ArrowLeft\") keys[\"KeyA\"] = true;\n            if (e.code === \"ArrowRight\") keys[\"KeyD\"] = true;\n        };\n\n        const onKeyUp = (e: KeyboardEvent) => {\n            keys[e.code] = false;\n            // Map arrow keys to WASD keys\n            if (e.code === \"ArrowUp\") keys[\"KeyW\"] = false;\n            if (e.code === \"ArrowDown\") keys[\"KeyS\"] = false;\n            if (e.code === \"ArrowLeft\") keys[\"KeyA\"] = false;\n            if (e.code === \"ArrowRight\") keys[\"KeyD\"] = false;\n            if (e.code === \"Escape\") document.exitPointerLock();\n        };\n\n        this.update = () => {\n            const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\n            const forward = new Vector3(-R[2], -R[5], -R[8]);\n            const right = new Vector3(R[0], R[3], R[6]);\n            let move = new Vector3(0, 0, 0);\n            if (keys[\"KeyS\"]) {\n                move = move.add(forward);\n            }\n            if (keys[\"KeyW\"]) {\n                move = move.subtract(forward);\n            }\n            if (keys[\"KeyA\"]) {\n                move = move.subtract(right);\n            }\n            if (keys[\"KeyD\"]) {\n                move = move.add(right);\n            }\n            move = new Vector3(move.x, 0, move.z);\n            if (move.magnitude() > 0) {\n                move = move.normalize();\n            }\n\n            targetPosition = targetPosition.add(move.multiply(this.moveSpeed * 0.01));\n            camera.position = camera.position.add(targetPosition.subtract(camera.position).multiply(this.dampening));\n\n            camera.rotation = Quaternion.FromEuler(new Vector3(pitch, yaw, 0));\n        };\n\n        const preventDefault = (e: Event) => {\n            e.preventDefault();\n            e.stopPropagation();\n        };\n\n        this.dispose = () => {\n            canvas.removeEventListener(\"dragenter\", preventDefault);\n            canvas.removeEventListener(\"dragover\", preventDefault);\n            canvas.removeEventListener(\"dragleave\", preventDefault);\n            canvas.removeEventListener(\"contextmenu\", preventDefault);\n            canvas.removeEventListener(\"mousedown\", onMouseDown);\n\n            document.removeEventListener(\"pointerlockchange\", onPointerLockChange);\n\n            window.removeEventListener(\"keydown\", onKeyDown);\n            window.removeEventListener(\"keyup\", onKeyUp);\n        };\n\n        window.addEventListener(\"keydown\", onKeyDown);\n        window.addEventListener(\"keyup\", onKeyUp);\n\n        canvas.addEventListener(\"dragenter\", preventDefault);\n        canvas.addEventListener(\"dragover\", preventDefault);\n        canvas.addEventListener(\"dragleave\", preventDefault);\n        canvas.addEventListener(\"contextmenu\", preventDefault);\n        canvas.addEventListener(\"mousedown\", onMouseDown);\n\n        document.addEventListener(\"pointerlockchange\", onPointerLockChange);\n\n        this.update();\n    }\n}\n\nexport { FPSControls };\n","import { Vector3 } from \"./Vector3\";\n\nclass Plane {\n    public readonly normal: Vector3;\n    public readonly point: Vector3;\n\n    constructor(normal: Vector3, point: Vector3) {\n        this.normal = normal;\n        this.point = point;\n    }\n\n    intersect(origin: Vector3, direction: Vector3): Vector3 | null {\n        const denominator = this.normal.dot(direction);\n\n        if (Math.abs(denominator) < 0.0001) {\n            return null;\n        }\n\n        const t = this.normal.dot(this.point.subtract(origin)) / denominator;\n\n        if (t < 0) {\n            return null;\n        }\n\n        return origin.add(direction.multiply(t));\n    }\n}\n\nexport { Plane };\n","import { ShaderProgram } from \"../programs/ShaderProgram\";\n\nclass ShaderPass {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    initialize(program: ShaderProgram) {}\n    render() {}\n    dispose() {}\n}\n\nexport { ShaderPass };\n","import { Splatv } from \"../../../splats/Splatv\";\nimport { SplatvData } from \"../../../splats/SplatvData\";\nimport { WebGLRenderer } from \"../../WebGLRenderer\";\nimport { ShaderPass } from \"../passes/ShaderPass\";\nimport { ShaderProgram } from \"./ShaderProgram\";\nimport { ObjectAddedEvent, ObjectChangedEvent, ObjectRemovedEvent } from \"../../../events/Events\";\nimport { Matrix4 } from \"../../../math/Matrix4\";\n\nconst vertexShaderSource = /* glsl */ `#version 300 es\nprecision highp float;\nprecision highp int;\n  \nuniform highp usampler2D u_texture;\nuniform mat4 projection, view;\nuniform vec2 focal;\nuniform vec2 viewport;\nuniform float time;\n  \nin vec2 position;\nin int index;\n  \nout vec4 vColor;\nout vec2 vPosition;\n  \nvoid main () {\n    gl_Position = vec4(0.0, 0.0, 2.0, 1.0);\n\n    uvec4 motion1 = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 2) | 3u, uint(index) >> 10), 0);\n    vec2 trbf = unpackHalf2x16(motion1.w);\n    float dt = time - trbf.x;\n\n    float topacity = exp(-1.0 * pow(dt / trbf.y, 2.0));\n    if(topacity < 0.02) return;\n\n    uvec4 motion0 = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 2) | 2u, uint(index) >> 10), 0);\n    uvec4 static0 = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 2), uint(index) >> 10), 0);\n\n    vec2 m0 = unpackHalf2x16(motion0.x), m1 = unpackHalf2x16(motion0.y), m2 = unpackHalf2x16(motion0.z), \n         m3 = unpackHalf2x16(motion0.w), m4 = unpackHalf2x16(motion1.x); \n      \n    vec4 trot = vec4(unpackHalf2x16(motion1.y).xy, unpackHalf2x16(motion1.z).xy) * dt;\n    vec3 tpos = (vec3(m0.xy, m1.x) * dt + vec3(m1.y, m2.xy) * dt*dt + vec3(m3.xy, m4.x) * dt*dt*dt);\n      \n    vec4 cam = view * vec4(uintBitsToFloat(static0.xyz) + tpos, 1);\n    vec4 pos = projection * cam;\n  \n    float clip = 1.2 * pos.w;\n    if (pos.z < -clip || pos.x < -clip || pos.x > clip || pos.y < -clip || pos.y > clip) return;\n    uvec4 static1 = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 2) | 1u, uint(index) >> 10), 0);\n\n    vec4 rot = vec4(unpackHalf2x16(static0.w).xy, unpackHalf2x16(static1.x).xy) + trot;\n    vec3 scale = vec3(unpackHalf2x16(static1.y).xy, unpackHalf2x16(static1.z).x);\n    rot /= sqrt(dot(rot, rot));\n  \n    mat3 S = mat3(scale.x, 0.0, 0.0, 0.0, scale.y, 0.0, 0.0, 0.0, scale.z);\n    mat3 R = mat3(\n        1.0 - 2.0 * (rot.z * rot.z + rot.w * rot.w), 2.0 * (rot.y * rot.z - rot.x * rot.w), 2.0 * (rot.y * rot.w + rot.x * rot.z),\n        2.0 * (rot.y * rot.z + rot.x * rot.w), 1.0 - 2.0 * (rot.y * rot.y + rot.w * rot.w), 2.0 * (rot.z * rot.w - rot.x * rot.y),\n        2.0 * (rot.y * rot.w - rot.x * rot.z), 2.0 * (rot.z * rot.w + rot.x * rot.y), 1.0 - 2.0 * (rot.y * rot.y + rot.z * rot.z));\n    mat3 M = S * R;\n    mat3 Vrk = 4.0 * transpose(M) * M;\n    mat3 J = mat3(\n        focal.x / cam.z, 0., -(focal.x * cam.x) / (cam.z * cam.z), \n        0., -focal.y / cam.z, (focal.y * cam.y) / (cam.z * cam.z), \n        0., 0., 0.\n    );\n  \n    mat3 T = transpose(mat3(view)) * J;\n    mat3 cov2d = transpose(T) * Vrk * T;\n  \n    float mid = (cov2d[0][0] + cov2d[1][1]) / 2.0;\n    float radius = length(vec2((cov2d[0][0] - cov2d[1][1]) / 2.0, cov2d[0][1]));\n    float lambda1 = mid + radius, lambda2 = mid - radius;\n  \n    if(lambda2 < 0.0) return;\n    vec2 diagonalVector = normalize(vec2(cov2d[0][1], lambda1 - cov2d[0][0]));\n    vec2 majorAxis = min(sqrt(2.0 * lambda1), 1024.0) * diagonalVector;\n    vec2 minorAxis = min(sqrt(2.0 * lambda2), 1024.0) * vec2(diagonalVector.y, -diagonalVector.x);\n      \n    uint rgba = static1.w;\n    vColor = \n        clamp(pos.z/pos.w+1.0, 0.0, 1.0) * \n        vec4(1.0, 1.0, 1.0, topacity) *\n        vec4(\n            (rgba) & 0xffu, \n            (rgba >> 8) & 0xffu, \n            (rgba >> 16) & 0xffu, \n            (rgba >> 24) & 0xffu) / 255.0;\n\n    vec2 vCenter = vec2(pos) / pos.w;\n    gl_Position = vec4(\n        vCenter \n        + position.x * majorAxis / viewport \n        + position.y * minorAxis / viewport, 0.0, 1.0);\n\n    vPosition = position;\n}\n`;\n\nconst fragmentShaderSource = /* glsl */ `#version 300 es\nprecision highp float;\n  \nin vec4 vColor;\nin vec2 vPosition;\n\nout vec4 fragColor;\n\nvoid main () {\n    float A = -dot(vPosition, vPosition);\n    if (A < -4.0) discard;\n    float B = exp(A) * vColor.a;\n    fragColor = vec4(B * vColor.rgb, B);\n}\n`;\n\nclass VideoRenderProgram extends ShaderProgram {\n    private _renderData: SplatvData | null = null;\n    private _depthIndex: Uint32Array = new Uint32Array();\n    private _splatTexture: WebGLTexture | null = null;\n\n    protected _initialize: () => void;\n    protected _resize: () => void;\n    protected _render: () => void;\n    protected _dispose: () => void;\n\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[] = []) {\n        super(renderer, passes);\n\n        const canvas = renderer.canvas;\n        const gl = renderer.gl;\n\n        let worker: Worker;\n\n        let u_projection: WebGLUniformLocation;\n        let u_viewport: WebGLUniformLocation;\n        let u_focal: WebGLUniformLocation;\n        let u_view: WebGLUniformLocation;\n        let u_texture: WebGLUniformLocation;\n        let u_time: WebGLUniformLocation;\n\n        let positionAttribute: number;\n        let indexAttribute: number;\n\n        let vertexBuffer: WebGLBuffer;\n        let indexBuffer: WebGLBuffer;\n\n        this._resize = () => {\n            if (!this._camera) return;\n\n            this._camera.data.setSize(canvas.width, canvas.height);\n            this._camera.update();\n\n            u_projection = gl.getUniformLocation(this.program, \"projection\") as WebGLUniformLocation;\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n\n            u_viewport = gl.getUniformLocation(this.program, \"viewport\") as WebGLUniformLocation;\n            gl.uniform2fv(u_viewport, new Float32Array([canvas.width, canvas.height]));\n        };\n\n        const setupWorker = () => {\n            if (renderer.renderProgram.worker === null) {\n                console.error(\"Render program is not initialized. Cannot render without worker\");\n                return;\n            }\n            worker = renderer.renderProgram.worker;\n            worker.onmessage = (e) => {\n                if (e.data.depthIndex) {\n                    const { depthIndex } = e.data;\n                    this._depthIndex = depthIndex;\n                    gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n                    gl.bufferData(gl.ARRAY_BUFFER, depthIndex, gl.STATIC_DRAW);\n                }\n            };\n        };\n\n        this._initialize = () => {\n            if (!this._scene || !this._camera) {\n                console.error(\"Cannot render without scene and camera\");\n                return;\n            }\n\n            this._resize();\n\n            this._scene.addEventListener(\"objectAdded\", handleObjectAdded);\n            this._scene.addEventListener(\"objectRemoved\", handleObjectRemoved);\n            for (const object of this._scene.objects) {\n                if (object instanceof Splatv) {\n                    if (this._renderData === null) {\n                        this._renderData = object.data;\n                        object.addEventListener(\"objectChanged\", handleObjectChanged);\n                    } else {\n                        console.warn(\"Multiple Splatv objects are not currently supported\");\n                    }\n                }\n            }\n\n            if (this._renderData === null) {\n                console.error(\"Cannot render without Splatv object\");\n                return;\n            }\n\n            u_focal = gl.getUniformLocation(this.program, \"focal\") as WebGLUniformLocation;\n            gl.uniform2fv(u_focal, new Float32Array([this._camera.data.fx, this._camera.data.fy]));\n\n            u_view = gl.getUniformLocation(this.program, \"view\") as WebGLUniformLocation;\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n\n            this._splatTexture = gl.createTexture() as WebGLTexture;\n            u_texture = gl.getUniformLocation(this.program, \"u_texture\") as WebGLUniformLocation;\n            gl.uniform1i(u_texture, 0);\n\n            u_time = gl.getUniformLocation(this.program, \"time\") as WebGLUniformLocation;\n            gl.uniform1f(u_time, Math.sin(Date.now() / 1000) / 2 + 1 / 2);\n\n            vertexBuffer = gl.createBuffer() as WebGLBuffer;\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-2, -2, 2, -2, 2, 2, -2, 2]), gl.STATIC_DRAW);\n\n            positionAttribute = gl.getAttribLocation(this.program, \"position\");\n            gl.enableVertexAttribArray(positionAttribute);\n            gl.vertexAttribPointer(positionAttribute, 2, gl.FLOAT, false, 0, 0);\n\n            indexBuffer = gl.createBuffer() as WebGLBuffer;\n            indexAttribute = gl.getAttribLocation(this.program, \"index\");\n            gl.enableVertexAttribArray(indexAttribute);\n            gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n\n            setupWorker();\n\n            gl.activeTexture(gl.TEXTURE0);\n            gl.bindTexture(gl.TEXTURE_2D, this._splatTexture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n            gl.texImage2D(\n                gl.TEXTURE_2D,\n                0,\n                gl.RGBA32UI,\n                this._renderData.width,\n                this._renderData.height,\n                0,\n                gl.RGBA_INTEGER,\n                gl.UNSIGNED_INT,\n                this._renderData.data,\n            );\n\n            const positions = this._renderData.positions;\n            const dummyTransforms = new Float32Array(new Matrix4().buffer);\n            const dummyTransformIndices = new Uint32Array(this._renderData.vertexCount);\n            dummyTransformIndices.fill(0);\n            worker.postMessage(\n                {\n                    sortData: {\n                        positions: positions,\n                        transforms: dummyTransforms,\n                        transformIndices: dummyTransformIndices,\n                        vertexCount: this._renderData.vertexCount,\n                    },\n                },\n                [positions.buffer, dummyTransforms.buffer, dummyTransformIndices.buffer],\n            );\n        };\n\n        const handleObjectAdded = (event: Event) => {\n            const e = event as ObjectAddedEvent;\n\n            if (e.object instanceof Splatv) {\n                if (this._renderData === null) {\n                    this._renderData = e.object.data;\n                    e.object.addEventListener(\"objectChanged\", handleObjectChanged);\n                } else {\n                    console.warn(\"Splatv not supported by default RenderProgram. Use VideoRenderProgram instead.\");\n                }\n            }\n\n            this.dispose();\n        };\n\n        const handleObjectRemoved = (event: Event) => {\n            const e = event as ObjectRemovedEvent;\n\n            if (e.object instanceof Splatv) {\n                if (this._renderData === e.object.data) {\n                    this._renderData = null;\n                    e.object.removeEventListener(\"objectChanged\", handleObjectChanged);\n                }\n            }\n\n            this.dispose();\n        };\n\n        const handleObjectChanged = (event: Event) => {\n            const e = event as ObjectChangedEvent;\n\n            if (e.object instanceof Splatv && this._renderData === e.object.data) {\n                this.dispose();\n            }\n        };\n\n        this._render = () => {\n            if (!this._scene || !this._camera) {\n                console.error(\"Cannot render without scene and camera\");\n                return;\n            }\n\n            if (!this._renderData) {\n                console.warn(\"Cannot render without Splatv object\");\n                return;\n            }\n\n            this._camera.update();\n            worker.postMessage({ viewProj: this._camera.data.viewProj.buffer });\n\n            gl.viewport(0, 0, canvas.width, canvas.height);\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n\n            gl.disable(gl.DEPTH_TEST);\n            gl.enable(gl.BLEND);\n            gl.blendFuncSeparate(gl.ONE_MINUS_DST_ALPHA, gl.ONE, gl.ONE_MINUS_DST_ALPHA, gl.ONE);\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\n            gl.uniform1f(u_time, Math.sin(Date.now() / 1000) / 2 + 1 / 2);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.vertexAttribPointer(positionAttribute, 2, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, this._depthIndex, gl.STATIC_DRAW);\n            gl.vertexAttribIPointer(indexAttribute, 1, gl.INT, 0, 0);\n            gl.vertexAttribDivisor(indexAttribute, 1);\n\n            gl.drawArraysInstanced(gl.TRIANGLE_FAN, 0, 4, this._renderData.vertexCount);\n        };\n\n        this._dispose = () => {\n            if (!this._scene || !this._camera) {\n                console.error(\"Cannot dispose without scene and camera\");\n                return;\n            }\n\n            this._scene.removeEventListener(\"objectAdded\", handleObjectAdded);\n            this._scene.removeEventListener(\"objectRemoved\", handleObjectRemoved);\n            for (const object of this._scene.objects) {\n                if (object instanceof Splatv) {\n                    if (this._renderData === object.data) {\n                        this._renderData = null;\n                        object.removeEventListener(\"objectChanged\", handleObjectChanged);\n                    }\n                }\n            }\n\n            worker?.terminate();\n\n            gl.deleteTexture(this._splatTexture);\n\n            gl.deleteBuffer(indexBuffer);\n            gl.deleteBuffer(vertexBuffer);\n        };\n    }\n\n    get renderData(): SplatvData | null {\n        return this._renderData;\n    }\n\n    protected _getVertexSource(): string {\n        return vertexShaderSource;\n    }\n\n    protected _getFragmentSource(): string {\n        return fragmentShaderSource;\n    }\n}\n\nexport { VideoRenderProgram };\n","import { Box3 } from \"./Box3\";\n\nclass BVHNode {\n    public left: BVHNode | null = null;\n    public right: BVHNode | null = null;\n    public pointIndices: number[] = [];\n\n    constructor(\n        public bounds: Box3,\n        public boxes: Box3[],\n        pointIndices: number[],\n    ) {\n        if (pointIndices.length > 1) {\n            this.split(bounds, boxes, pointIndices);\n        } else if (pointIndices.length > 0) {\n            this.pointIndices = pointIndices;\n        }\n    }\n\n    private split(bounds: Box3, boxes: Box3[], pointIndices: number[]) {\n        const axis = bounds.size().maxComponent();\n        pointIndices.sort((a, b) => boxes[a].center().getComponent(axis) - boxes[b].center().getComponent(axis));\n\n        const mid = Math.floor(pointIndices.length / 2);\n        const leftIndices = pointIndices.slice(0, mid);\n        const rightIndices = pointIndices.slice(mid);\n\n        this.left = new BVHNode(bounds, boxes, leftIndices);\n        this.right = new BVHNode(bounds, boxes, rightIndices);\n    }\n\n    public queryRange(range: Box3): number[] {\n        if (!this.bounds.intersects(range)) {\n            return [];\n        } else if (this.left !== null && this.right !== null) {\n            return this.left.queryRange(range).concat(this.right.queryRange(range));\n        } else {\n            return this.pointIndices.filter((index) => range.intersects(this.boxes[index]));\n        }\n    }\n}\n\nclass BVH {\n    public root: BVHNode;\n\n    constructor(bounds: Box3, boxes: Box3[]) {\n        const pointIndices = boxes.map((_, index) => index);\n        this.root = new BVHNode(bounds, boxes, pointIndices);\n    }\n\n    public queryRange(range: Box3) {\n        return this.root.queryRange(range);\n    }\n}\n\nexport { BVH };\n","import { Camera } from \"../../../cameras/Camera\";\nimport { Vector3 } from \"../../../math/Vector3\";\nimport { Splat } from \"../../../splats/Splat\";\nimport { RenderProgram } from \"../programs/RenderProgram\";\nimport { Box3 } from \"../../../math/Box3\";\nimport { BVH } from \"../../../math/BVH\";\nimport { RenderData } from \"./RenderData\";\n\nclass IntersectionTester {\n    testPoint: (x: number, y: number) => Splat | null;\n\n    constructor(renderProgram: RenderProgram, maxDistance: number = 100, resolution: number = 1.0) {\n        let vertexCount = 0;\n        let bvh: BVH | null = null;\n        let lookup: Splat[] = [];\n\n        const build = () => {\n            if (renderProgram.renderData === null) {\n                console.error(\"IntersectionTester cannot be called before renderProgram has been initialized\");\n                return;\n            }\n            lookup = [];\n            const renderData = renderProgram.renderData as RenderData;\n            const boxes = new Array<Box3>(renderData.offsets.size);\n            let i = 0;\n            const bounds = new Box3(\n                new Vector3(Infinity, Infinity, Infinity),\n                new Vector3(-Infinity, -Infinity, -Infinity),\n            );\n            for (const splat of renderData.offsets.keys()) {\n                const splatBounds = splat.bounds;\n                boxes[i++] = splatBounds;\n                bounds.expand(splatBounds.min);\n                bounds.expand(splatBounds.max);\n                lookup.push(splat);\n            }\n            bounds.permute();\n            bvh = new BVH(bounds, boxes);\n            vertexCount = renderData.vertexCount;\n        };\n\n        this.testPoint = (x: number, y: number) => {\n            if (renderProgram.renderData === null || renderProgram.camera === null) {\n                console.error(\"IntersectionTester cannot be called before renderProgram has been initialized\");\n                return null;\n            }\n\n            build();\n\n            if (bvh === null) {\n                console.error(\"Failed to build octree for IntersectionTester\");\n                return null;\n            }\n\n            const renderData = renderProgram.renderData as RenderData;\n            const camera = renderProgram.camera as Camera;\n\n            if (vertexCount !== renderData.vertexCount) {\n                console.warn(\"IntersectionTester has not been rebuilt since the last render\");\n            }\n\n            const ray = camera.screenPointToRay(x, y);\n            for (let x = 0; x < maxDistance; x += resolution) {\n                const point = camera.position.add(ray.multiply(x));\n                const minPoint = new Vector3(\n                    point.x - resolution / 2,\n                    point.y - resolution / 2,\n                    point.z - resolution / 2,\n                );\n                const maxPoint = new Vector3(\n                    point.x + resolution / 2,\n                    point.y + resolution / 2,\n                    point.z + resolution / 2,\n                );\n                const queryBox = new Box3(minPoint, maxPoint);\n                const points = bvh.queryRange(queryBox);\n                if (points.length > 0) {\n                    return lookup[points[0]];\n                }\n            }\n\n            return null;\n        };\n    }\n}\n\nexport { IntersectionTester };\n"],"names":["Vector3","constructor","x","y","z","this","equals","v","add","subtract","multiply","buffer","divide","cross","dot","lerp","t","min","Math","max","getComponent","axis","Error","minComponent","maxComponent","magnitude","sqrt","distanceTo","normalize","length","flat","clone","toString","join","One","value","Quaternion","w","q","l","w1","x1","y1","z1","w2","x2","y2","z2","inverse","apply","vecQuat","conjugate","rotatedQuat","FromEuler","e","halfX","halfY","halfZ","cy","cos","sy","sin","cp","sp","cz","sz","toEuler","sinr_cosp","cosr_cosp","atan2","sinp","abs","sign","PI","asin","siny_cosp","cosy_cosp","FromMatrix3","matrix","m","trace","s","FromAxisAngle","angle","halfAngle","LookRotation","direction","forward","rotAngle","acos","rotAxis","EventDispatcher","listeners","Map","addEventListener","type","listener","has","set","Set","get","removeEventListener","delete","hasEventListener","dispatchEvent","event","Matrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","i","a","b","determinant","invert","det","invDet","Compose","position","rotation","scale","xx","xy","xz","yy","yz","zz","wx","wy","wz","sx","ObjectAddedEvent","Event","object","super","ObjectRemovedEvent","ObjectChangedEvent","Object3D","positionChanged","rotationChanged","scaleChanged","_position","_rotation","_scale","_transform","_changeEvent","update","applyPosition","applyRotation","applyScale","raiseChangeEvent","_updateMatrix","transform","Matrix3","Eye","Diagonal","RotationFromQuaternion","RotationFromEuler","cx","SplatData","vertexCount","positions","rotations","scales","colors","changed","detached","_vertexCount","_positions","Float32Array","_rotations","_scales","_colors","Uint8Array","_selection","translate","translation","rotate","R","currentRotation","newRot","serialize","data","RowLength","f_buffer","u_buffer","reattach","selection","console","assert","byteLength","Deserialize","SplatvData","width","height","_data","_width","_height","Uint32Array","floor","Converter","SplatToPLY","header","properties","push","property","headerBuffer","TextEncoder","encode","plyRowLength","plyLength","output","DataView","ArrayBuffer","offset","scale_offset","opacity_offset","rot_offset","pos0","pos1","pos2","f_dc_0","SH_C0","f_dc_1","f_dc_2","alpha","opacity","log","scale0","scale1","scale2","rot0","rot1","rot2","rot3","setFloat32","f_dc_offset","Box3","contains","point","intersects","box","size","center","expand","permute","Splat","splat","undefined","selectedChanged","colorTransformChanged","_selected","_colorTransforms","_colorTransformsMap","_bounds","Infinity","recalculateBounds","saveToFile","name","format","document","now","Date","getFullYear","getMonth","getDate","blob","plyData","Blob","link","createElement","download","href","URL","createObjectURL","click","selected","colorTransforms","colorTransformsMap","bounds","Splatv","CameraData","_fx","_fy","_near","_far","_projectionMatrix","_viewMatrix","_viewProj","_updateProjectionMatrix","fx","fy","far","near","projectionMatrix","viewMatrix","setSize","viewProj","Vector4","Camera","camera","screenPointToRay","clipSpaceCoords","inverseProjectionMatrix","cameraSpaceCoords","inverseViewMatrix","worldSpaceCoords","Scene","_objects","addObject","objects","removeObject","index","indexOf","splice","findObject","predicate","findObjectOfType","reset","objectsToRemove","slice","buffers","async","initiateFetchRequest","url","useCache","req","fetch","mode","credentials","cache","status","loadRequestDataIntoBuffer","res","onProgress","headers","reader","body","getReader","contentLength","parseInt","bytesRead","done","read","loadDataIntoBuffer","chunks","receivedLength","chunk","loadChunkedDataIntoBuffer","Loader","LoadAsync","scene","LoadFromArrayBuffer","LoadFromFileAsync","file","FileReader","onload","target","result","onprogress","loaded","total","readAsArrayBuffer","Promise","resolve","onloadend","arrayBuffer","PLYLoader","_ParsePLYBuffer","inputBuffer","ubuf","headerText","TextDecoder","decode","header_end","header_end_index","exec","rowOffset","offsets","double","int","uint","float","short","ushort","uchar","prop","split","filter","k","startsWith","_p","dataView","q_polycam","rgba","Uint8ClampedArray","rot","r0","r1","r2","r3","forEach","getFloat32","getInt32","exp","temp","SplatvLoader","_ParseSplatvBuffer","splatv","handleChunk","intView","Int32Array","splatChunks","JSON","parse","warn","cameras","cameraData","texwidth","texheight","shift","inputOffset","sizeToRead","subarray","ShaderProgram","renderer","passes","_scene","_camera","_started","_initialized","_renderer","gl","_program","createProgram","_passes","vertexShader","createShader","VERTEX_SHADER","shaderSource","_getVertexSource","compileShader","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","fragmentShader","FRAGMENT_SHADER","_getFragmentSource","attachShader","program","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","resize","useProgram","_resize","initialize","_initialize","pass","render","dispose","_render","_dispose","started","loadWasm","moduleArg","readyPromiseResolve","readyPromiseReject","Module","reject","readBinary","moduleOverrides","Object","assign","scriptDirectory","self","location","substr","replace","lastIndexOf","xhr","XMLHttpRequest","open","responseType","send","response","bind","wasmBinary","wasmMemory","err","WebAssembly","abort","HEAP8","HEAPU8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","ABORT","updateMemoryViews","Int8Array","Int16Array","Uint16Array","Float64Array","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runDependencies","dependenciesFulfilled","what","RuntimeError","wasmBinaryFile","path","dataURIPrefix","isDataURI","filename","getBinarySync","binary","decoded","atob","bytes","charCodeAt","intArrayFromBase64","tryParseAsDataURI","instantiateArrayBuffer","binaryFile","imports","receiver","then","getBinaryPromise","instantiate","instance","reason","callRuntimeCallbacks","callbacks","embind_charCodes","BindingError","readLatin1String","ptr","ret","c","awaitingDependencies","registeredTypes","throwBindingError","message","registerType","rawType","registeredInstance","options","TypeError","hasOwnProperty","ignoreDuplicateRegistrations","cb","sharedRegisterType","HandleAllocator","allocated","freelist","emval_handles","count_emval_handles","count","reserved","Emval","handle","allocate","refcount","simpleReadValueFromPointer","pointer","floatReadValueFromPointer","integerReadValueFromPointer","signed","readPointer","UTF8Decoder","UTF8ToString","maxBytesToRead","heapOrArray","idx","endIdx","endPtr","str","u0","u1","u2","String","fromCharCode","ch","UTF8ArrayToString","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","outPtr","maxBytesToWrite","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","lengthBytesUTF32","len","growMemory","pages","grow","codes","Array","embind_init_charCodes","prototype","id","pop","free","wasmImports","f","primitiveType","minRange","maxRange","trueValue","falseValue","fromWireType","wt","toWireType","destructors","o","argPackAdvance","readValueFromPointer","destructorFunction","h","rv","__emval_decref","bitshift","isUnsignedType","includes","dataTypeIndex","TA","decodeMemoryView","d","stdStringIsUTF8","payload","decodeStartPtr","currentBytePtr","stringSegment","_free","valueIsOfTypeString","lengthBytesUTF8","base","_malloc","heap","outIdx","u","startIdx","stringToUTF8Array","charCode","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","j","isVoid","g","requestedSize","oldSize","maxHeapSize","multiple","cutDown","overGrownHeapSize","newSize","wasmExports","callback","info","receiveInstance","module","exports","unshift","removeRunDependency","catch","createWasm","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","calledRun","run","doRun","postRun","preRun","setTimeout","runCaller","ready","RenderData","dataChanged","transformsChanged","colorTransformsChanged","_updating","_dirty","splatIndex","_splatIndices","_offsets","lookup","ceil","_transformsWidth","_transformsHeight","_transforms","_transformIndicesWidth","_transformIndicesHeight","_transformIndices","_colorTransformsWidth","_colorTransformsHeight","fill","_colorTransformIndicesWidth","_colorTransformIndicesHeight","_colorTransformIndices","colorTransformIndices","_worker","DataWorker","updateTransform","updateColorTransforms","keys","colorTransform","colorTransformIndex","wasmModule","onmessage","worldPositions","worldRotations","worldScales","initWasm","buildImmediate","waitForWasm","positionsPtr","rotationsPtr","scalesPtr","colorsPtr","selectionPtr","dataPtr","worldPositionsPtr","worldRotationsPtr","worldScalesPtr","_pack","outData","build","serializedSplat","postMessage","getSplat","key","getLocalIndex","markDirty","rebuild","clear","terminate","transforms","transformsWidth","transformsHeight","transformIndices","transformIndicesWidth","transformIndicesHeight","colorTransformsWidth","colorTransformsHeight","colorTransformIndicesWidth","colorTransformIndicesHeight","needsRebuild","updating","Color32","r","flatNorm","toHexString","map","padStart","RenderProgram","_outlineThickness","_outlineColor","_renderData","_depthIndex","_splatTexture","canvas","u_projection","u_viewport","u_focal","u_view","u_texture","u_transforms","u_transformIndices","u_colorTransforms","u_colorTransformIndices","u_outlineThickness","u_outlineColor","positionAttribute","indexAttribute","transformsTexture","transformIndicesTexture","colorTransformsTexture","colorTransformIndicesTexture","vertexBuffer","indexBuffer","getUniformLocation","uniformMatrix4fv","uniform2fv","createWorker","SortWorker","depthIndex","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","handleObjectAdded","handleObjectRemoved","handleObjectChanged","uniform1f","outlineThickness","uniform4fv","outlineColor","createTexture","uniform1i","createBuffer","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","renderData","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","splatTexture","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA32UI","RGBA_INTEGER","UNSIGNED_INT","TEXTURE1","RGBA32F","RGBA","TEXTURE2","R32UI","RED_INTEGER","TEXTURE3","TEXTURE4","detachedPositions","detachedTransforms","detachedTransformIndices","_a","sortData","_b","viewport","clearColor","COLOR_BUFFER_BIT","disable","DEPTH_TEST","enable","BLEND","blendFuncSeparate","ONE_MINUS_DST_ALPHA","ONE","blendEquationSeparate","FUNC_ADD","vertexAttribIPointer","INT","vertexAttribDivisor","drawArraysInstanced","TRIANGLE_FAN","deleteTexture","deleteBuffer","_setOutlineThickness","_setOutlineColor","worker","FadeInPass","speed","renderProgram","u_useDepthFade","u_depthFade","active","WebGLRenderer","optionalCanvas","optionalRenderPasses","_backgroundColor","style","display","boxSizing","margin","padding","appendChild","background","_canvas","_gl","getContext","antialias","renderPasses","_renderProgram","programs","clientWidth","clientHeight","addProgram","removeProgram","backgroundColor","OrbitControls","beta","radius","enableKeyboardControls","inputTarget","minAngle","maxAngle","minZoom","maxZoom","orbitSpeed","panSpeed","zoomSpeed","dampening","setCameraTarget","desiredTarget","desiredAlpha","desiredBeta","desiredRadius","dragging","panning","lastDist","lastX","lastY","isUpdatingCamera","eulerRotation","newTarget","dx","dy","dz","computeZoomNorm","onKeyDown","code","onKeyUp","onMouseDown","preventDefault","button","clientX","clientY","window","onMouseUp","onMouseMove","zoomNorm","panX","panY","right","up","onWheel","deltaY","onTouchStart","touches","distX","distY","onTouchEnd","onTouchMove","dist","touchX","touchY","rx","ry","moveSpeed","rotateSpeed","stopPropagation","FPSControls","lookSpeed","pitch","yaw","targetPosition","pointerLock","requestPointerLock","onPointerLockChange","pointerLockElement","mouseX","movementX","mouseY","movementY","exitPointerLock","move","Plane","normal","intersect","origin","denominator","ShaderPass","VideoRenderProgram","u_time","setupWorker","dummyTransforms","dummyTransformIndices","BVHNode","boxes","pointIndices","left","sort","mid","leftIndices","rightIndices","queryRange","range","concat","BVH","_","root","IntersectionTester","maxDistance","resolution","bvh","testPoint","splatBounds","ray","minPoint","maxPoint","queryBox","points"],"mappings":"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IACK3E,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAEtI2E,GACI3E,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAEnI2E,IACK3E,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAEhI2E,IACK3E,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAEtI2E,GACI3E,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAErI2E,IACK3E,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE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"}